{"ast":null,"code":"import { chartBaseTheme } from '@progress/kendo-charts';\n\nvar font = function (style) {\n  return style.fontWeight + \" \" + style.fontSize + \" \" + style.fontFamily;\n};\n\nvar computedBackgroundColor = function (element) {\n  return window.getComputedStyle(element).backgroundColor;\n};\n\nvar letterPos = function (letter) {\n  return letter.toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n};\n\nvar seriesPos = function (name) {\n  var alpha = name.match(/series-([a-z])$/);\n\n  if (alpha !== null) {\n    return letterPos(alpha[1]);\n  }\n\n  var num = name.split('--series-')[1];\n  return parseInt(num, 10) - 1;\n};\n\nvar SERIES_COLORS = 30;\n\nvar seriesTemplate = function () {\n  var result = \"\\n      <div class=\\\"k-var--series-a\\\"></div>\\n      <div class=\\\"k-var--series-b\\\"></div>\\n      <div class=\\\"k-var--series-c\\\"></div>\\n      <div class=\\\"k-var--series-d\\\"></div>\\n      <div class=\\\"k-var--series-e\\\"></div>\\n      <div class=\\\"k-var--series-f\\\"></div>\\n\";\n\n  for (var i = 0; i < SERIES_COLORS; i++) {\n    result += \"\\n      <div class=\\\"k-var--series-\" + (i + 1) + \"\\\"></div>\";\n  }\n\n  return result;\n};\n\nvar template = \"\\n    <div class=\\\"k-var--accent\\\"></div>\\n    <div class=\\\"k-var--base\\\"></div>\\n    <div class=\\\"k-var--background\\\"></div>\\n\\n    <div class=\\\"k-var--normal-background\\\"></div>\\n    <div class=\\\"k-var--normal-text-color\\\"></div>\\n    <div class=\\\"k-var--hover-background\\\"></div>\\n    <div class=\\\"k-var--hover-text-color\\\"></div>\\n    <div class=\\\"k-var--selected-background\\\"></div>\\n    <div class=\\\"k-var--selected-text-color\\\"></div>\\n    <div class=\\\"k-var--chart-error-bars-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-border\\\"></div>\\n    <div class=\\\"k-var--chart-notes-lines\\\"></div>\\n    <div class=\\\"k-var--chart-crosshair-background\\\"></div>\\n\\n    <div class=\\\"k-var--chart-inactive\\\"></div>\\n    <div class=\\\"k-var--chart-major-lines\\\"></div>\\n    <div class=\\\"k-var--chart-minor-lines\\\"></div>\\n    <div class=\\\"k-var--chart-area-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-area-inactive-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-line-inactive-opacity\\\"></div>\\n\\n    <div class=\\\"k-widget k-chart\\\">\\n        <div class=\\\"k-var--chart-font\\\"></div>\\n        <div class=\\\"k-var--chart-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-pane-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-label-font\\\"></div>\\n    </div>\\n\\n    <div class=\\\"k-var--series-unset\\\"></div>\\n    <div class=\\\"k-var--series\\\">\\n      \" + seriesTemplate() + \"\\n    </div>\\n\";\n/**\n * @hidden\n */\n\nvar ThemeService =\n/** @class */\nfunction () {\n  function ThemeService(store) {\n    this.store = store;\n  }\n\n  ThemeService.prototype.setStyle = function (field, value) {\n    this.store.dispatch({\n      type: 'set',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  };\n\n  ThemeService.prototype.setColors = function () {\n    this.mapColor('axisDefaults.crosshair.color', 'chart-crosshair-background');\n    this.mapColor('axisDefaults.labels.color', 'normal-text-color');\n    this.mapColor('axisDefaults.line.color', 'chart-major-lines');\n    this.mapColor('axisDefaults.majorGridLines.color', 'chart-major-lines');\n    this.mapColor('axisDefaults.minorGridLines.color', 'chart-minor-lines');\n    this.mapColor('axisDefaults.notes.icon.background', 'chart-notes-background');\n    this.mapColor('axisDefaults.notes.icon.border.color', 'chart-notes-border');\n    this.mapColor('axisDefaults.notes.line.color', 'chart-notes-lines');\n    this.mapColor('axisDefaults.title.color', 'normal-text-color');\n    this.mapColor('chartArea.background', 'background');\n    this.mapColor('legend.inactiveItems.labels.color', 'chart-inactive');\n    this.mapColor('legend.inactiveItems.markers.color', 'chart-inactive');\n    this.mapColor('legend.labels.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.boxPlot.downColor', 'chart-major-lines');\n    this.mapColor('seriesDefaults.boxPlot.mean.color', 'base');\n    this.mapColor('seriesDefaults.boxPlot.median.color', 'base');\n    this.mapColor('seriesDefaults.boxPlot.whiskers.color', 'accent');\n    this.mapColor('seriesDefaults.bullet.target.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.candlestick.downColor', 'normal-text-color');\n    this.mapColor('seriesDefaults.candlestick.line.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.errorBars.color', 'chart-error-bars-background');\n    this.mapColor('seriesDefaults.horizontalWaterfall.line.color', 'chart-major-lines');\n    this.mapColor('seriesDefaults.icon.border.color', 'chart-major-lines');\n    this.mapColor('seriesDefaults.labels.background', 'background');\n    this.mapColor('seriesDefaults.labels.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.notes.icon.background', 'chart-notes-background');\n    this.mapColor('seriesDefaults.notes.icon.border.color', 'chart-notes-border');\n    this.mapColor('seriesDefaults.notes.line.color', 'chart-notes-lines');\n    this.mapColor('seriesDefaults.verticalBoxPlot.downColor', 'chart-major-lines');\n    this.mapColor('seriesDefaults.verticalBoxPlot.mean.color', 'base');\n    this.mapColor('seriesDefaults.verticalBoxPlot.median.color', 'base');\n    this.mapColor('seriesDefaults.verticalBoxPlot.whiskers.color', 'accent');\n    this.mapColor('seriesDefaults.verticalBullet.target.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.waterfall.line.color', 'chart-major-lines');\n    this.mapColor('title.color', 'normal-text-color');\n    var opacity = parseFloat(this.queryStyle('chart-area-opacity').opacity);\n\n    if (!isNaN(opacity)) {\n      this.setStyle('seriesDefaults.area.opacity', opacity);\n      this.setStyle('seriesDefaults.radarArea.opacity', opacity);\n      this.setStyle('seriesDefaults.verticalArea.opacity', opacity);\n      this.setStyle('seriesDefaults.labels.opacity', opacity);\n    }\n\n    this.setInactiveOpacity(['area', 'verticalArea'], 'chart-area-inactive-opacity');\n    this.setInactiveOpacity(['line', 'verticalLine'], 'chart-line-inactive-opacity');\n  };\n\n  ThemeService.prototype.setFonts = function () {\n    var defaultFont = font(this.queryStyle('chart-font'));\n    var titleFont = font(this.queryStyle('chart-title-font'));\n    var paneTitleFont = font(this.queryStyle('chart-pane-title-font'));\n    var labelFont = font(this.queryStyle('chart-label-font'));\n    this.setStyle('axisDefaults.labels.font', labelFont);\n    this.setStyle('axisDefaults.notes.label.font', defaultFont);\n    this.setStyle('axisDefaults.title.font', defaultFont);\n    this.setStyle('legend.labels.font', defaultFont);\n    this.setStyle('seriesDefaults.labels.font', labelFont);\n    this.setStyle('seriesDefaults.notes.label.font', defaultFont);\n    this.setStyle('title.font', titleFont);\n    this.setStyle('paneDefaults.title.font', paneTitleFont);\n  };\n\n  ThemeService.prototype.setSeriesColors = function () {\n    var element = this.element;\n    var series = [].slice.call(element.querySelectorAll('.k-var--series div'));\n    var unsetColor = computedBackgroundColor(element.querySelector('.k-var--series-unset'));\n    var seriesColors = series.reduce(function (arr, el) {\n      var pos = seriesPos(el.className);\n      var color = computedBackgroundColor(el);\n\n      if (color !== unsetColor) {\n        arr[pos] = color;\n      }\n\n      return arr;\n    }, [] // Will populate the series colors in this array\n    );\n    this.setStyle('seriesColors', seriesColors);\n  };\n\n  ThemeService.prototype.mapColor = function (key, varName) {\n    this.setStyle(key, this.queryStyle(varName).backgroundColor);\n  };\n\n  ThemeService.prototype.queryStyle = function (varName) {\n    var element = this.element;\n    return window.getComputedStyle(element.querySelector(\".k-var--\" + varName));\n  };\n\n  ThemeService.prototype.setInactiveOpacity = function (seriesTypes, selector) {\n    var _this = this;\n\n    var inactiveOpacity = parseFloat(this.queryStyle(selector).opacity);\n\n    if (!isNaN(inactiveOpacity) && inactiveOpacity < 1) {\n      seriesTypes.forEach(function (type) {\n        return _this.setStyle(\"seriesDefaults.\" + type + \".highlight.inactiveOpacity\", inactiveOpacity);\n      });\n    }\n  };\n\n  return ThemeService;\n}();\n\nvar loadTheme = function (store, done) {\n  var service = new ThemeService(store);\n\n  if (typeof document === 'undefined') {\n    store.dispatch({\n      type: 'push',\n      payload: chartBaseTheme()\n    });\n    return;\n  }\n\n  var container = service.element = document.createElement('div');\n  container.style.display = 'none';\n  container.innerHTML = template;\n  document.body.appendChild(container);\n\n  try {\n    store.dispatch({\n      type: 'push',\n      payload: chartBaseTheme()\n    });\n    service.setColors();\n    service.setFonts();\n    service.setSeriesColors();\n  } finally {\n    document.body.removeChild(service.element);\n    delete service.element;\n    done();\n  }\n};\n\nexport { loadTheme };","map":{"version":3,"sources":["../../../src/theming/theme-service.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { chartBaseTheme } from '@progress/kendo-charts';\nvar font = function (style) { return style.fontWeight + \" \" + style.fontSize + \" \" + style.fontFamily; };\nvar computedBackgroundColor = function (element) { return window.getComputedStyle(element).backgroundColor; };\nvar letterPos = function (letter) { return letter.toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0); };\nvar seriesPos = function (name) {\n    var alpha = name.match(/series-([a-z])$/);\n    if (alpha !== null) {\n        return letterPos(alpha[1]);\n    }\n    var num = name.split('--series-')[1];\n    return parseInt(num, 10) - 1;\n};\nvar SERIES_COLORS = 30;\nvar seriesTemplate = function () {\n    var result = \"\\n      <div class=\\\"k-var--series-a\\\"></div>\\n      <div class=\\\"k-var--series-b\\\"></div>\\n      <div class=\\\"k-var--series-c\\\"></div>\\n      <div class=\\\"k-var--series-d\\\"></div>\\n      <div class=\\\"k-var--series-e\\\"></div>\\n      <div class=\\\"k-var--series-f\\\"></div>\\n\";\n    for (var i = 0; i < SERIES_COLORS; i++) {\n        result += \"\\n      <div class=\\\"k-var--series-\" + (i + 1) + \"\\\"></div>\";\n    }\n    return result;\n};\nvar template = \"\\n    <div class=\\\"k-var--accent\\\"></div>\\n    <div class=\\\"k-var--base\\\"></div>\\n    <div class=\\\"k-var--background\\\"></div>\\n\\n    <div class=\\\"k-var--normal-background\\\"></div>\\n    <div class=\\\"k-var--normal-text-color\\\"></div>\\n    <div class=\\\"k-var--hover-background\\\"></div>\\n    <div class=\\\"k-var--hover-text-color\\\"></div>\\n    <div class=\\\"k-var--selected-background\\\"></div>\\n    <div class=\\\"k-var--selected-text-color\\\"></div>\\n    <div class=\\\"k-var--chart-error-bars-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-border\\\"></div>\\n    <div class=\\\"k-var--chart-notes-lines\\\"></div>\\n    <div class=\\\"k-var--chart-crosshair-background\\\"></div>\\n\\n    <div class=\\\"k-var--chart-inactive\\\"></div>\\n    <div class=\\\"k-var--chart-major-lines\\\"></div>\\n    <div class=\\\"k-var--chart-minor-lines\\\"></div>\\n    <div class=\\\"k-var--chart-area-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-area-inactive-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-line-inactive-opacity\\\"></div>\\n\\n    <div class=\\\"k-widget k-chart\\\">\\n        <div class=\\\"k-var--chart-font\\\"></div>\\n        <div class=\\\"k-var--chart-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-pane-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-label-font\\\"></div>\\n    </div>\\n\\n    <div class=\\\"k-var--series-unset\\\"></div>\\n    <div class=\\\"k-var--series\\\">\\n      \" + seriesTemplate() + \"\\n    </div>\\n\";\n/**\n * @hidden\n */\nvar ThemeService = /** @class */ (function () {\n    function ThemeService(store) {\n        this.store = store;\n    }\n    ThemeService.prototype.setStyle = function (field, value) {\n        this.store.dispatch({ type: 'set', payload: { field: field, value: value } });\n    };\n    ThemeService.prototype.setColors = function () {\n        this.mapColor('axisDefaults.crosshair.color', 'chart-crosshair-background');\n        this.mapColor('axisDefaults.labels.color', 'normal-text-color');\n        this.mapColor('axisDefaults.line.color', 'chart-major-lines');\n        this.mapColor('axisDefaults.majorGridLines.color', 'chart-major-lines');\n        this.mapColor('axisDefaults.minorGridLines.color', 'chart-minor-lines');\n        this.mapColor('axisDefaults.notes.icon.background', 'chart-notes-background');\n        this.mapColor('axisDefaults.notes.icon.border.color', 'chart-notes-border');\n        this.mapColor('axisDefaults.notes.line.color', 'chart-notes-lines');\n        this.mapColor('axisDefaults.title.color', 'normal-text-color');\n        this.mapColor('chartArea.background', 'background');\n        this.mapColor('legend.inactiveItems.labels.color', 'chart-inactive');\n        this.mapColor('legend.inactiveItems.markers.color', 'chart-inactive');\n        this.mapColor('legend.labels.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.boxPlot.downColor', 'chart-major-lines');\n        this.mapColor('seriesDefaults.boxPlot.mean.color', 'base');\n        this.mapColor('seriesDefaults.boxPlot.median.color', 'base');\n        this.mapColor('seriesDefaults.boxPlot.whiskers.color', 'accent');\n        this.mapColor('seriesDefaults.bullet.target.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.candlestick.downColor', 'normal-text-color');\n        this.mapColor('seriesDefaults.candlestick.line.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.errorBars.color', 'chart-error-bars-background');\n        this.mapColor('seriesDefaults.horizontalWaterfall.line.color', 'chart-major-lines');\n        this.mapColor('seriesDefaults.icon.border.color', 'chart-major-lines');\n        this.mapColor('seriesDefaults.labels.background', 'background');\n        this.mapColor('seriesDefaults.labels.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.notes.icon.background', 'chart-notes-background');\n        this.mapColor('seriesDefaults.notes.icon.border.color', 'chart-notes-border');\n        this.mapColor('seriesDefaults.notes.line.color', 'chart-notes-lines');\n        this.mapColor('seriesDefaults.verticalBoxPlot.downColor', 'chart-major-lines');\n        this.mapColor('seriesDefaults.verticalBoxPlot.mean.color', 'base');\n        this.mapColor('seriesDefaults.verticalBoxPlot.median.color', 'base');\n        this.mapColor('seriesDefaults.verticalBoxPlot.whiskers.color', 'accent');\n        this.mapColor('seriesDefaults.verticalBullet.target.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.waterfall.line.color', 'chart-major-lines');\n        this.mapColor('title.color', 'normal-text-color');\n        var opacity = parseFloat(this.queryStyle('chart-area-opacity').opacity);\n        if (!isNaN(opacity)) {\n            this.setStyle('seriesDefaults.area.opacity', opacity);\n            this.setStyle('seriesDefaults.radarArea.opacity', opacity);\n            this.setStyle('seriesDefaults.verticalArea.opacity', opacity);\n            this.setStyle('seriesDefaults.labels.opacity', opacity);\n        }\n        this.setInactiveOpacity(['area', 'verticalArea'], 'chart-area-inactive-opacity');\n        this.setInactiveOpacity(['line', 'verticalLine'], 'chart-line-inactive-opacity');\n    };\n    ThemeService.prototype.setFonts = function () {\n        var defaultFont = font(this.queryStyle('chart-font'));\n        var titleFont = font(this.queryStyle('chart-title-font'));\n        var paneTitleFont = font(this.queryStyle('chart-pane-title-font'));\n        var labelFont = font(this.queryStyle('chart-label-font'));\n        this.setStyle('axisDefaults.labels.font', labelFont);\n        this.setStyle('axisDefaults.notes.label.font', defaultFont);\n        this.setStyle('axisDefaults.title.font', defaultFont);\n        this.setStyle('legend.labels.font', defaultFont);\n        this.setStyle('seriesDefaults.labels.font', labelFont);\n        this.setStyle('seriesDefaults.notes.label.font', defaultFont);\n        this.setStyle('title.font', titleFont);\n        this.setStyle('paneDefaults.title.font', paneTitleFont);\n    };\n    ThemeService.prototype.setSeriesColors = function () {\n        var element = this.element;\n        var series = [].slice.call(element.querySelectorAll('.k-var--series div'));\n        var unsetColor = computedBackgroundColor(element.querySelector('.k-var--series-unset'));\n        var seriesColors = series.reduce(function (arr, el) {\n            var pos = seriesPos(el.className);\n            var color = computedBackgroundColor(el);\n            if (color !== unsetColor) {\n                arr[pos] = color;\n            }\n            return arr;\n        }, [] // Will populate the series colors in this array\n        );\n        this.setStyle('seriesColors', seriesColors);\n    };\n    ThemeService.prototype.mapColor = function (key, varName) {\n        this.setStyle(key, this.queryStyle(varName).backgroundColor);\n    };\n    ThemeService.prototype.queryStyle = function (varName) {\n        var element = this.element;\n        return window.getComputedStyle(element.querySelector(\".k-var--\" + varName));\n    };\n    ThemeService.prototype.setInactiveOpacity = function (seriesTypes, selector) {\n        var _this = this;\n        var inactiveOpacity = parseFloat(this.queryStyle(selector).opacity);\n        if (!isNaN(inactiveOpacity) && inactiveOpacity < 1) {\n            seriesTypes.forEach(function (type) {\n                return _this.setStyle(\"seriesDefaults.\" + type + \".highlight.inactiveOpacity\", inactiveOpacity);\n            });\n        }\n    };\n    return ThemeService;\n}());\nvar loadTheme = function (store, done) {\n    var service = new ThemeService(store);\n    if (typeof document === 'undefined') {\n        store.dispatch({ type: 'push', payload: chartBaseTheme() });\n        return;\n    }\n    var container = service.element = document.createElement('div');\n    container.style.display = 'none';\n    container.innerHTML = template;\n    document.body.appendChild(container);\n    try {\n        store.dispatch({ type: 'push', payload: chartBaseTheme() });\n        service.setColors();\n        service.setFonts();\n        service.setSeriesColors();\n    }\n    finally {\n        document.body.removeChild(service.element);\n        delete service.element;\n        done();\n    }\n};\nexport { loadTheme };\n//# sourceMappingURL=theme-service.js.map"]},"metadata":{},"sourceType":"module"}