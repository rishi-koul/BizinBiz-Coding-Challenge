{"ast":null,"code":"import CategoryAxis from './category-axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\nimport { CENTER, DATE, DEFAULT_PRECISION, MAX_VALUE, OBJECT, X, Y } from '../common/constants';\nimport { deepExtend, defined, inArray, last, limitValue, round, setDefaultOptions, sparseArrayLimits } from '../common';\nimport { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS, TIME_PER_MINUTE, TIME_PER_HOUR, TIME_PER_DAY, TIME_PER_WEEK, TIME_PER_MONTH, TIME_PER_YEAR, TIME_PER_UNIT } from '../date-utils/constants';\nimport { dateComparer, toDate, addTicks, addDuration, dateDiff, absoluteDateDiff, dateIndex, dateEquals, toTime, parseDate, parseDates, firstDay } from '../date-utils';\nimport { DateLabelFormats } from './constants';\nvar AUTO = \"auto\";\nvar BASE_UNITS = [MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS];\nvar FIT = \"fit\";\n\nfunction categoryRange(categories) {\n  var range = categories._range;\n\n  if (!range) {\n    range = categories._range = sparseArrayLimits(categories);\n    range.min = toDate(range.min);\n    range.max = toDate(range.max);\n  }\n\n  return range;\n}\n\nvar EmptyDateRange = function EmptyDateRange(options) {\n  this.options = options;\n};\n\nEmptyDateRange.prototype.displayIndices = function displayIndices() {\n  return {\n    min: 0,\n    max: 1\n  };\n};\n\nEmptyDateRange.prototype.displayRange = function displayRange() {\n  return {};\n};\n\nEmptyDateRange.prototype.total = function total() {\n  return {};\n};\n\nEmptyDateRange.prototype.valueRange = function valueRange() {\n  return {};\n};\n\nEmptyDateRange.prototype.valueIndex = function valueIndex() {\n  return -1;\n};\n\nEmptyDateRange.prototype.values = function values() {\n  return [];\n};\n\nEmptyDateRange.prototype.totalIndex = function totalIndex() {\n  return -1;\n};\n\nEmptyDateRange.prototype.valuesCount = function valuesCount() {\n  return 0;\n};\n\nEmptyDateRange.prototype.totalCount = function totalCount() {\n  return 0;\n};\n\nEmptyDateRange.prototype.dateAt = function dateAt() {\n  return null;\n};\n\nvar DateRange = function DateRange(start, end, options) {\n  this.options = options;\n  options.baseUnitStep = options.baseUnitStep || 1;\n  var roundToBaseUnit = options.roundToBaseUnit;\n  var justified = options.justified;\n  this.start = addDuration(start, 0, options.baseUnit, options.weekStartDay);\n  var lowerEnd = this.roundToTotalStep(end);\n  var expandEnd = !justified && dateEquals(end, lowerEnd) && !options.justifyEnd;\n  this.end = this.roundToTotalStep(end, !justified, expandEnd ? 1 : 0);\n  var min = options.min || start;\n  this.valueStart = this.roundToTotalStep(min);\n  this.displayStart = roundToBaseUnit ? this.valueStart : min;\n  var max = options.max;\n\n  if (!max) {\n    this.valueEnd = lowerEnd;\n    this.displayEnd = roundToBaseUnit || expandEnd ? this.end : end;\n  } else {\n    var next = !justified && dateEquals(max, this.roundToTotalStep(max)) ? -1 : 0;\n    this.valueEnd = this.roundToTotalStep(max, false, next);\n    this.displayEnd = roundToBaseUnit ? this.roundToTotalStep(max, !justified) : options.max;\n  }\n\n  if (this.valueEnd < this.valueStart) {\n    this.valueEnd = this.valueStart;\n  }\n\n  if (this.displayEnd <= this.displayStart) {\n    this.displayEnd = this.roundToTotalStep(this.displayStart, false, 1);\n  }\n};\n\nDateRange.prototype.displayRange = function displayRange() {\n  return {\n    min: this.displayStart,\n    max: this.displayEnd\n  };\n};\n\nDateRange.prototype.displayIndices = function displayIndices() {\n  if (!this._indices) {\n    var options = this.options;\n    var baseUnit = options.baseUnit;\n    var baseUnitStep = options.baseUnitStep;\n    var minIdx = dateIndex(this.displayStart, this.valueStart, baseUnit, baseUnitStep);\n    var maxIdx = dateIndex(this.displayEnd, this.valueStart, baseUnit, baseUnitStep);\n    this._indices = {\n      min: minIdx,\n      max: maxIdx\n    };\n  }\n\n  return this._indices;\n};\n\nDateRange.prototype.total = function total() {\n  return {\n    min: this.start,\n    max: this.end\n  };\n};\n\nDateRange.prototype.totalCount = function totalCount() {\n  var last = this.totalIndex(this.end);\n  return last + (this.options.justified ? 1 : 0);\n};\n\nDateRange.prototype.valueRange = function valueRange() {\n  return {\n    min: this.valueStart,\n    max: this.valueEnd\n  };\n};\n\nDateRange.prototype.valueIndex = function valueIndex(value) {\n  var options = this.options;\n  return Math.floor(dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep));\n};\n\nDateRange.prototype.totalIndex = function totalIndex(value) {\n  var options = this.options;\n  return Math.floor(dateIndex(value, this.start, options.baseUnit, options.baseUnitStep));\n};\n\nDateRange.prototype.dateIndex = function dateIndex$1(value) {\n  var options = this.options;\n  return dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep);\n};\n\nDateRange.prototype.valuesCount = function valuesCount() {\n  var maxIdx = this.valueIndex(this.valueEnd);\n  return maxIdx + 1;\n};\n\nDateRange.prototype.values = function values() {\n  var values = this._values;\n\n  if (!values) {\n    var options = this.options;\n    var range = this.valueRange();\n    this._values = values = [];\n\n    for (var date = range.min; date <= range.max;) {\n      values.push(date);\n      date = addDuration(date, options.baseUnitStep, options.baseUnit, options.weekStartDay);\n    }\n  }\n\n  return values;\n};\n\nDateRange.prototype.dateAt = function dateAt(index, total) {\n  var options = this.options;\n  return addDuration(total ? this.start : this.valueStart, options.baseUnitStep * index, options.baseUnit, options.weekStartDay);\n};\n\nDateRange.prototype.roundToTotalStep = function roundToTotalStep(value, upper, next) {\n  var ref = this.options;\n  var baseUnit = ref.baseUnit;\n  var baseUnitStep = ref.baseUnitStep;\n  var weekStartDay = ref.weekStartDay;\n  var start = this.start;\n  var step = dateIndex(value, start, baseUnit, baseUnitStep);\n  var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n\n  if (next) {\n    roundedStep += next;\n  }\n\n  return addDuration(start, roundedStep * baseUnitStep, baseUnit, weekStartDay);\n};\n\nfunction autoBaseUnit(options, startUnit, startStep) {\n  var categoryLimits = categoryRange(options.categories);\n  var span = (options.max || categoryLimits.max) - (options.min || categoryLimits.min);\n  var autoBaseUnitSteps = options.autoBaseUnitSteps;\n  var maxDateGroups = options.maxDateGroups;\n  var autoUnit = options.baseUnit === FIT;\n  var autoUnitIx = startUnit ? BASE_UNITS.indexOf(startUnit) : 0;\n  var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n  var units = span / TIME_PER_UNIT[baseUnit];\n  var totalUnits = units;\n  var unitSteps, step, nextStep;\n\n  while (!step || units >= maxDateGroups) {\n    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n\n    do {\n      nextStep = unitSteps.shift();\n    } while (nextStep && startUnit === baseUnit && nextStep < startStep);\n\n    if (nextStep) {\n      step = nextStep;\n      units = totalUnits / step;\n    } else if (baseUnit === last(BASE_UNITS)) {\n      step = Math.ceil(totalUnits / maxDateGroups);\n      break;\n    } else if (autoUnit) {\n      baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n      totalUnits = span / TIME_PER_UNIT[baseUnit];\n      unitSteps = null;\n    } else {\n      if (units > maxDateGroups) {\n        step = Math.ceil(totalUnits / maxDateGroups);\n      }\n\n      break;\n    }\n  }\n\n  options.baseUnitStep = step;\n  options.baseUnit = baseUnit;\n}\n\nfunction defaultBaseUnit(options) {\n  var categories = options.categories;\n  var count = defined(categories) ? categories.length : 0;\n  var minDiff = MAX_VALUE;\n  var lastCategory, unit;\n\n  for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n    var category = categories[categoryIx];\n\n    if (category && lastCategory) {\n      var diff = absoluteDateDiff(category, lastCategory);\n\n      if (diff > 0) {\n        minDiff = Math.min(minDiff, diff);\n\n        if (minDiff >= TIME_PER_YEAR) {\n          unit = YEARS;\n        } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n          unit = MONTHS;\n        } else if (minDiff >= TIME_PER_WEEK) {\n          unit = WEEKS;\n        } else if (minDiff >= TIME_PER_DAY) {\n          unit = DAYS;\n        } else if (minDiff >= TIME_PER_HOUR) {\n          unit = HOURS;\n        } else if (minDiff >= TIME_PER_MINUTE) {\n          unit = MINUTES;\n        } else {\n          unit = SECONDS;\n        }\n      }\n    }\n\n    lastCategory = category;\n  }\n\n  options.baseUnit = unit || DAYS;\n}\n\nfunction initUnit(options) {\n  var baseUnit = (options.baseUnit || \"\").toLowerCase();\n  var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n\n  if (useDefault) {\n    defaultBaseUnit(options);\n  }\n\n  if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n    autoBaseUnit(options);\n  }\n\n  return options;\n}\n\nvar DateCategoryAxis = function (CategoryAxis) {\n  function DateCategoryAxis() {\n    CategoryAxis.apply(this, arguments);\n  }\n\n  if (CategoryAxis) DateCategoryAxis.__proto__ = CategoryAxis;\n  DateCategoryAxis.prototype = Object.create(CategoryAxis && CategoryAxis.prototype);\n  DateCategoryAxis.prototype.constructor = DateCategoryAxis;\n\n  DateCategoryAxis.prototype.clone = function clone() {\n    var copy = new DateCategoryAxis(Object.assign({}, this.options), this.chartService);\n    copy.createLabels();\n    return copy;\n  };\n\n  DateCategoryAxis.prototype.categoriesHash = function categoriesHash() {\n    var start = this.dataRange.total().min;\n    return this.options.baseUnit + this.options.baseUnitStep + start;\n  };\n\n  DateCategoryAxis.prototype.initUserOptions = function initUserOptions(options) {\n    return options;\n  };\n\n  DateCategoryAxis.prototype.initFields = function initFields() {\n    CategoryAxis.prototype.initFields.call(this);\n    var chartService = this.chartService;\n    var intlService = chartService.intl;\n    var options = this.options;\n    var categories = options.categories || [];\n\n    if (!categories._parsed) {\n      categories = parseDates(intlService, categories);\n      categories._parsed = true;\n    }\n\n    options = deepExtend({\n      roundToBaseUnit: true\n    }, options, {\n      categories: categories,\n      min: parseDate(intlService, options.min),\n      max: parseDate(intlService, options.max),\n      weekStartDay: firstDay(options, intlService)\n    });\n\n    if (chartService.panning && chartService.isPannable(options.vertical ? Y : X)) {\n      options.roundToBaseUnit = false;\n    }\n\n    options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n    options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n    this.options = options;\n    options.srcCategories = categories;\n\n    if (categories.length > 0) {\n      var range = categoryRange(categories);\n      var maxDivisions = options.maxDivisions;\n      this.dataRange = new DateRange(range.min, range.max, initUnit(options));\n\n      if (maxDivisions) {\n        var dataRange = this.dataRange.displayRange();\n        var divisionOptions = Object.assign({}, options, {\n          justified: true,\n          roundToBaseUnit: false,\n          baseUnit: 'fit',\n          min: dataRange.min,\n          max: dataRange.max,\n          maxDateGroups: maxDivisions\n        });\n        var dataRangeOptions = this.dataRange.options;\n        autoBaseUnit(divisionOptions, dataRangeOptions.baseUnit, dataRangeOptions.baseUnitStep);\n        this.divisionRange = new DateRange(range.min, range.max, divisionOptions);\n      } else {\n        this.divisionRange = this.dataRange;\n      }\n    } else {\n      options.baseUnit = options.baseUnit || DAYS;\n      this.dataRange = this.divisionRange = new EmptyDateRange(options);\n    }\n\n    this.rangeLabels = [];\n  };\n\n  DateCategoryAxis.prototype.tickIndices = function tickIndices(stepSize) {\n    var ref = this;\n    var dataRange = ref.dataRange;\n    var divisionRange = ref.divisionRange;\n    var valuesCount = divisionRange.valuesCount();\n\n    if (!this.options.maxDivisions || !valuesCount) {\n      return CategoryAxis.prototype.tickIndices.call(this, stepSize);\n    }\n\n    var indices = [];\n    var values = divisionRange.values();\n    var offset = 0;\n\n    if (!this.options.justified) {\n      values = values.concat(divisionRange.dateAt(valuesCount));\n      offset = 0.5; //align ticks to the center of not justified categories\n    }\n\n    for (var idx = 0; idx < values.length; idx++) {\n      indices.push(dataRange.dateIndex(values[idx]) + offset);\n\n      if (stepSize !== 1 && idx >= 1) {\n        var last = indices.length - 1;\n        indices.splice(idx, 0, indices[last - 1] + (indices[last] - indices[last - 1]) * stepSize);\n      }\n    }\n\n    return indices;\n  };\n\n  DateCategoryAxis.prototype.shouldRenderNote = function shouldRenderNote(value) {\n    var range = this.range();\n    var categories = this.options.categories || [];\n    return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n  };\n\n  DateCategoryAxis.prototype.parseNoteValue = function parseNoteValue(value) {\n    return parseDate(this.chartService.intl, value);\n  };\n\n  DateCategoryAxis.prototype.noteSlot = function noteSlot(value) {\n    return this.getSlot(value);\n  };\n\n  DateCategoryAxis.prototype.translateRange = function translateRange(delta) {\n    var options = this.options;\n    var baseUnit = options.baseUnit;\n    var weekStartDay = options.weekStartDay;\n    var vertical = options.vertical;\n    var lineBox = this.lineBox();\n    var size = vertical ? lineBox.height() : lineBox.width();\n    var range = this.range();\n    var scale = size / (range.max - range.min);\n    var offset = round(delta / scale, DEFAULT_PRECISION);\n\n    if (range.min && range.max) {\n      var from = addTicks(options.min || range.min, offset);\n      var to = addTicks(options.max || range.max, offset);\n      range = {\n        min: addDuration(from, 0, baseUnit, weekStartDay),\n        max: addDuration(to, 0, baseUnit, weekStartDay)\n      };\n    }\n\n    return range;\n  };\n\n  DateCategoryAxis.prototype.scaleRange = function scaleRange(delta) {\n    var rounds = Math.abs(delta);\n    var result = this.range();\n    var from = result.min;\n    var to = result.max;\n\n    if (from && to) {\n      while (rounds--) {\n        var range = dateDiff(from, to);\n        var step = Math.round(range * 0.1);\n\n        if (delta < 0) {\n          from = addTicks(from, step);\n          to = addTicks(to, -step);\n        } else {\n          from = addTicks(from, -step);\n          to = addTicks(to, step);\n        }\n      }\n\n      result = {\n        min: from,\n        max: to\n      };\n    }\n\n    return result;\n  };\n\n  DateCategoryAxis.prototype.labelsRange = function labelsRange() {\n    return {\n      min: this.options.labels.skip,\n      max: this.divisionRange.valuesCount()\n    };\n  };\n\n  DateCategoryAxis.prototype.pan = function pan(delta) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var options = this.options;\n    var lineBox = this.lineBox();\n    var size = options.vertical ? lineBox.height() : lineBox.width();\n    var ref = this.dataRange.displayRange();\n    var min = ref.min;\n    var max = ref.max;\n    var totalLimits = this.dataRange.total();\n    var scale = size / (max - min);\n    var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n    var from = addTicks(min, offset);\n    var to = addTicks(max, offset);\n    var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n\n    if (panRange) {\n      panRange.min = toDate(panRange.min);\n      panRange.max = toDate(panRange.max);\n      panRange.baseUnit = options.baseUnit;\n      panRange.baseUnitStep = options.baseUnitStep || 1;\n      panRange.userSetBaseUnit = options.userSetBaseUnit;\n      panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n      return panRange;\n    }\n  };\n\n  DateCategoryAxis.prototype.pointsRange = function pointsRange(start, end) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var pointsRange = CategoryAxis.prototype.pointsRange.call(this, start, end);\n    var datesRange = this.dataRange.displayRange();\n    var indicesRange = this.dataRange.displayIndices();\n    var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n    var options = this.options;\n    var min = addTicks(datesRange.min, pointsRange.min * scale);\n    var max = addTicks(datesRange.min, pointsRange.max * scale);\n    return {\n      min: min,\n      max: max,\n      baseUnit: options.userSetBaseUnit || options.baseUnit,\n      baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n    };\n  };\n\n  DateCategoryAxis.prototype.zoomRange = function zoomRange(delta) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var options = this.options;\n    var fit = options.userSetBaseUnit === FIT;\n    var totalLimits = this.dataRange.total();\n    var ref = this.dataRange.displayRange();\n    var rangeMin = ref.min;\n    var rangeMax = ref.max;\n    var ref$1 = this.dataRange.options;\n    var weekStartDay = ref$1.weekStartDay;\n    var baseUnit = ref$1.baseUnit;\n    var baseUnitStep = ref$1.baseUnitStep;\n    var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n    var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n\n    if (fit) {\n      var autoBaseUnitSteps = options.autoBaseUnitSteps;\n      var maxDateGroups = options.maxDateGroups;\n      var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n      var rangeDiff = dateDiff(rangeMax, rangeMin);\n      var diff = dateDiff(max, min);\n      var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n      var autoBaseUnitStep, ticks;\n\n      if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n        min = addTicks(rangeMin, ticks);\n        max = addTicks(rangeMax, -ticks);\n      } else if (diff > maxDiff && baseUnit !== YEARS) {\n        var stepIndex = 0;\n\n        do {\n          baseUnitIndex++;\n          baseUnit = BASE_UNITS[baseUnitIndex];\n          stepIndex = 0;\n          ticks = 2 * TIME_PER_UNIT[baseUnit];\n\n          do {\n            autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n            stepIndex++;\n          } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n\n        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n\n        if (ticks > 0) {\n          min = addTicks(rangeMin, -ticks);\n          max = addTicks(rangeMax, ticks);\n          min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n          max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n        }\n      }\n    }\n\n    if (min < totalLimits.min) {\n      min = totalLimits.min;\n    }\n\n    if (max > totalLimits.max) {\n      max = totalLimits.max;\n    }\n\n    if (min && max && dateDiff(max, min) > 0) {\n      return {\n        min: min,\n        max: max,\n        baseUnit: options.userSetBaseUnit || options.baseUnit,\n        baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n      };\n    }\n  };\n\n  DateCategoryAxis.prototype.range = function range() {\n    return this.dataRange.displayRange();\n  };\n\n  DateCategoryAxis.prototype.createLabels = function createLabels() {\n    CategoryAxis.prototype.createLabels.call(this);\n    this.createRangeLabels();\n  };\n\n  DateCategoryAxis.prototype.clearLabels = function clearLabels() {\n    CategoryAxis.prototype.clearLabels.call(this);\n    this.rangeLabels = [];\n  };\n\n  DateCategoryAxis.prototype.arrangeLabels = function arrangeLabels() {\n    this.arrangeRangeLabels();\n    CategoryAxis.prototype.arrangeLabels.call(this);\n  };\n\n  DateCategoryAxis.prototype.arrangeRangeLabels = function arrangeRangeLabels() {\n    var ref = this;\n    var options = ref.options;\n    var rangeLabels = ref.rangeLabels;\n\n    if (rangeLabels.length === 0) {\n      return;\n    }\n\n    var lineBox = this.lineBox();\n    var vertical = options.vertical;\n    var mirror = options.rangeLabels.mirror || options.labels.mirror;\n    var firstLabel = rangeLabels[0];\n\n    if (firstLabel) {\n      var position = vertical ? lineBox.y1 - firstLabel.box.height() / 2 : lineBox.x1;\n      this.positionLabel(firstLabel, mirror, position);\n    }\n\n    var lastLabel = rangeLabels[1];\n\n    if (lastLabel) {\n      var position$1 = vertical ? lineBox.y2 - lastLabel.box.height() / 2 : lineBox.x2;\n      this.positionLabel(lastLabel, mirror, position$1);\n    }\n  };\n\n  DateCategoryAxis.prototype.autoRotateLabels = function autoRotateLabels() {\n    CategoryAxis.prototype.autoRotateLabels.call(this);\n    this.autoRotateRangeLabels();\n  };\n\n  DateCategoryAxis.prototype.hideOutOfRangeLabels = function hideOutOfRangeLabels() {\n    CategoryAxis.prototype.hideOutOfRangeLabels.call(this);\n    this.hideOverlappingLabels();\n  };\n\n  DateCategoryAxis.prototype.hideOverlappingLabels = function hideOverlappingLabels() {\n    var ref = this;\n    var rangeLabels = ref.rangeLabels;\n    var labels = ref.labels;\n\n    if (rangeLabels.length === 0) {\n      return;\n    }\n\n    function clip(rangeLabel, label) {\n      if (!label.options.visible || label.box.overlaps(rangeLabel.box)) {\n        label.options.visible = false;\n        return true;\n      }\n\n      return false;\n    }\n\n    var firstRangeLabel = rangeLabels[0];\n\n    if (firstRangeLabel && firstRangeLabel.options.visible) {\n      for (var i = 0; i < labels.length; i++) {\n        var overlaps = clip(firstRangeLabel, labels[i]);\n\n        if (!overlaps) {\n          break;\n        }\n      }\n    }\n\n    var lastRangeLabel = rangeLabels[1];\n\n    if (lastRangeLabel && lastRangeLabel.options.visible) {\n      for (var i$1 = labels.length - 1; i$1 > 0; --i$1) {\n        var overlaps$1 = clip(lastRangeLabel, labels[i$1]);\n\n        if (!overlaps$1) {\n          break;\n        }\n      }\n    }\n  };\n\n  DateCategoryAxis.prototype.contentBox = function contentBox() {\n    var box = CategoryAxis.prototype.contentBox.call(this);\n    var rangeLabels = this.rangeLabels;\n\n    for (var i = 0; i < rangeLabels.length; i++) {\n      var label = rangeLabels[i];\n\n      if (label.options.visible) {\n        box.wrap(label.box);\n      }\n    }\n\n    return box;\n  };\n\n  DateCategoryAxis.prototype.createAxisLabel = function createAxisLabel(index, labelOptions, labelContext) {\n    if (labelContext === void 0) labelContext = {};\n    var options = this.options;\n    var dataItem = options.dataItems && !options.maxDivisions ? options.dataItems[index] : null;\n    var date = this.divisionRange.dateAt(index);\n    var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n    labelOptions.format = labelOptions.format || unitFormat;\n    labelContext.dataItem = dataItem;\n    var text = this.axisLabelText(date, labelOptions, labelContext);\n\n    if (text) {\n      return new AxisLabel(date, text, index, dataItem, labelOptions);\n    }\n  };\n\n  DateCategoryAxis.prototype.createRangeLabels = function createRangeLabels() {\n    var this$1 = this;\n    var ref = this.divisionRange;\n    var displayStart = ref.displayStart;\n    var displayEnd = ref.displayEnd;\n    var options = this.options;\n    var labelOptions = Object.assign({}, options.labels, options.rangeLabels, {\n      align: CENTER,\n      zIndex: options.zIndex\n    });\n\n    if (labelOptions.visible !== true) {\n      return;\n    }\n\n    this.normalizeLabelRotation(labelOptions);\n    labelOptions.alignRotation = CENTER;\n\n    if (labelOptions.rotation === \"auto\") {\n      labelOptions.rotation = 0;\n      options.autoRotateRangeLabels = true;\n    }\n\n    var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n    labelOptions.format = labelOptions.format || unitFormat;\n\n    var createLabel = function (index, date, text) {\n      if (text) {\n        var label = new AxisLabel(date, text, index, null, labelOptions);\n        this$1.append(label);\n        this$1.rangeLabels.push(label);\n      }\n    };\n\n    var startText = this.axisLabelText(displayStart, labelOptions, {\n      index: 0,\n      count: 2\n    });\n    createLabel(0, displayStart, startText);\n    var endText = this.axisLabelText(displayEnd, labelOptions, {\n      index: 1,\n      count: 2\n    });\n    createLabel(1, displayEnd, endText);\n  };\n\n  DateCategoryAxis.prototype.autoRotateRangeLabels = function autoRotateRangeLabels() {\n    var this$1 = this;\n    var labels = this.rangeLabels;\n\n    if (!this.options.autoRotateRangeLabels || this.options.vertical || labels.length !== 2) {\n      return;\n    }\n\n    var rotateLabel = function (label, tickPositions, index) {\n      var width = Math.abs(tickPositions[index + 1] - tickPositions[index]) * 2;\n      var angle = this$1.autoRotateLabelAngle(label.box, width);\n\n      if (angle !== 0) {\n        label.options.rotation = angle;\n        label.reflow(new Box());\n      }\n    };\n\n    var tickPositions = this.getMajorTickPositions();\n    rotateLabel(labels[0], tickPositions, 0);\n    rotateLabel(labels[1], tickPositions, tickPositions.length - 2);\n  };\n\n  DateCategoryAxis.prototype.categoryIndex = function categoryIndex(value) {\n    return this.dataRange.valueIndex(value);\n  };\n\n  DateCategoryAxis.prototype.slot = function slot(from, to, limit) {\n    var dateRange = this.dataRange;\n    var start = from;\n    var end = to;\n\n    if (start instanceof Date) {\n      start = dateRange.dateIndex(start);\n    }\n\n    if (end instanceof Date) {\n      end = dateRange.dateIndex(end);\n    }\n\n    var slot = this.getSlot(start, end, limit);\n\n    if (slot) {\n      return slot.toRect();\n    }\n  };\n\n  DateCategoryAxis.prototype.getSlot = function getSlot(a, b, limit) {\n    var start = a;\n    var end = b;\n\n    if (typeof start === OBJECT) {\n      start = this.categoryIndex(start);\n    }\n\n    if (typeof end === OBJECT) {\n      end = this.categoryIndex(end);\n    }\n\n    return CategoryAxis.prototype.getSlot.call(this, start, end, limit);\n  };\n\n  DateCategoryAxis.prototype.valueRange = function valueRange() {\n    var options = this.options;\n    var range = categoryRange(options.srcCategories);\n    return {\n      min: toDate(range.min),\n      max: toDate(range.max)\n    };\n  };\n\n  DateCategoryAxis.prototype.categoryAt = function categoryAt(index, total) {\n    return this.dataRange.dateAt(index, total);\n  };\n\n  DateCategoryAxis.prototype.categoriesCount = function categoriesCount() {\n    return this.dataRange.valuesCount();\n  };\n\n  DateCategoryAxis.prototype.rangeIndices = function rangeIndices() {\n    return this.dataRange.displayIndices();\n  };\n\n  DateCategoryAxis.prototype.labelsBetweenTicks = function labelsBetweenTicks() {\n    return !this.divisionRange.options.justified;\n  };\n\n  DateCategoryAxis.prototype.prepareUserOptions = function prepareUserOptions() {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    this.options.categories = this.dataRange.values();\n  };\n\n  DateCategoryAxis.prototype.getCategory = function getCategory(point) {\n    var index = this.pointCategoryIndex(point);\n\n    if (index === null) {\n      return null;\n    }\n\n    return this.dataRange.dateAt(index);\n  };\n\n  DateCategoryAxis.prototype.totalIndex = function totalIndex(value) {\n    return this.dataRange.totalIndex(value);\n  };\n\n  DateCategoryAxis.prototype.currentRangeIndices = function currentRangeIndices() {\n    var range = this.dataRange.valueRange();\n    return {\n      min: this.dataRange.totalIndex(range.min),\n      max: this.dataRange.totalIndex(range.max)\n    };\n  };\n\n  DateCategoryAxis.prototype.totalRange = function totalRange() {\n    return this.dataRange.total();\n  };\n\n  DateCategoryAxis.prototype.totalCount = function totalCount() {\n    return this.dataRange.totalCount();\n  };\n\n  DateCategoryAxis.prototype.isEmpty = function isEmpty() {\n    return !this.options.srcCategories.length;\n  };\n\n  DateCategoryAxis.prototype.roundedRange = function roundedRange() {\n    if (this.options.roundToBaseUnit !== false || this.isEmpty()) {\n      return this.range();\n    }\n\n    var options = this.options;\n    var datesRange = categoryRange(options.srcCategories);\n    var dateRange = new DateRange(datesRange.min, datesRange.max, Object.assign({}, options, {\n      justified: false,\n      roundToBaseUnit: true,\n      justifyEnd: options.justified\n    }));\n    return dateRange.displayRange();\n  };\n\n  return DateCategoryAxis;\n}(CategoryAxis);\n\nsetDefaultOptions(DateCategoryAxis, {\n  type: DATE,\n  labels: {\n    dateFormats: DateLabelFormats\n  },\n  rangeLabels: {\n    visible: false\n  },\n  autoBaseUnitSteps: {\n    milliseconds: [1, 10, 100],\n    seconds: [1, 2, 5, 15, 30],\n    minutes: [1, 2, 5, 15, 30],\n    hours: [1, 2, 3],\n    days: [1, 2, 3],\n    weeks: [1, 2],\n    months: [1, 2, 3, 6],\n    years: [1, 2, 3, 5, 10, 25, 50]\n  },\n  maxDateGroups: 10\n});\nexport default DateCategoryAxis;","map":{"version":3,"sources":["/Users/rishikoul/Desktop/interview/frontend/node_modules/@progress/kendo-charts/dist/es/core/date-category-axis.js"],"names":["CategoryAxis","AxisLabel","Box","CENTER","DATE","DEFAULT_PRECISION","MAX_VALUE","OBJECT","X","Y","deepExtend","defined","inArray","last","limitValue","round","setDefaultOptions","sparseArrayLimits","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS","WEEKS","MONTHS","YEARS","TIME_PER_MINUTE","TIME_PER_HOUR","TIME_PER_DAY","TIME_PER_WEEK","TIME_PER_MONTH","TIME_PER_YEAR","TIME_PER_UNIT","dateComparer","toDate","addTicks","addDuration","dateDiff","absoluteDateDiff","dateIndex","dateEquals","toTime","parseDate","parseDates","firstDay","DateLabelFormats","AUTO","BASE_UNITS","FIT","categoryRange","categories","range","_range","min","max","EmptyDateRange","options","prototype","displayIndices","displayRange","total","valueRange","valueIndex","values","totalIndex","valuesCount","totalCount","dateAt","DateRange","start","end","baseUnitStep","roundToBaseUnit","justified","baseUnit","weekStartDay","lowerEnd","roundToTotalStep","expandEnd","justifyEnd","valueStart","displayStart","valueEnd","displayEnd","next","_indices","minIdx","maxIdx","value","Math","floor","dateIndex$1","_values","date","push","index","upper","ref","step","roundedStep","ceil","autoBaseUnit","startUnit","startStep","categoryLimits","span","autoBaseUnitSteps","maxDateGroups","autoUnit","autoUnitIx","indexOf","units","totalUnits","unitSteps","nextStep","slice","shift","defaultBaseUnit","count","length","minDiff","lastCategory","unit","categoryIx","category","diff","initUnit","toLowerCase","useDefault","DateCategoryAxis","apply","arguments","__proto__","Object","create","constructor","clone","copy","assign","chartService","createLabels","categoriesHash","dataRange","initUserOptions","initFields","call","intlService","intl","_parsed","panning","isPannable","vertical","userSetBaseUnit","userSetBaseUnitStep","srcCategories","maxDivisions","divisionOptions","dataRangeOptions","divisionRange","rangeLabels","tickIndices","stepSize","indices","offset","concat","idx","splice","shouldRenderNote","parseNoteValue","noteSlot","getSlot","translateRange","delta","lineBox","size","height","width","scale","from","to","scaleRange","rounds","abs","result","labelsRange","labels","skip","pan","isEmpty","totalLimits","reverse","panRange","limitRange","pointsRange","datesRange","indicesRange","zoomRange","fit","rangeMin","rangeMax","ref$1","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","ticks","stepIndex","createRangeLabels","clearLabels","arrangeLabels","arrangeRangeLabels","mirror","firstLabel","position","y1","box","x1","positionLabel","lastLabel","position$1","y2","x2","autoRotateLabels","autoRotateRangeLabels","hideOutOfRangeLabels","hideOverlappingLabels","clip","rangeLabel","label","visible","overlaps","firstRangeLabel","i","lastRangeLabel","i$1","overlaps$1","contentBox","wrap","createAxisLabel","labelOptions","labelContext","dataItem","dataItems","unitFormat","dateFormats","format","text","axisLabelText","this$1","align","zIndex","normalizeLabelRotation","alignRotation","rotation","createLabel","append","startText","endText","rotateLabel","tickPositions","angle","autoRotateLabelAngle","reflow","getMajorTickPositions","categoryIndex","slot","limit","dateRange","Date","toRect","a","b","categoryAt","categoriesCount","rangeIndices","labelsBetweenTicks","prepareUserOptions","getCategory","point","pointCategoryIndex","currentRangeIndices","totalRange","roundedRange","type","milliseconds","seconds","minutes","hours","days","weeks","months","years"],"mappings":"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","sourcesContent":["import CategoryAxis from './category-axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\n\nimport { CENTER, DATE, DEFAULT_PRECISION, MAX_VALUE, OBJECT, X, Y } from '../common/constants';\nimport { deepExtend, defined, inArray, last, limitValue, round, setDefaultOptions, sparseArrayLimits } from '../common';\n\nimport { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS,\n    TIME_PER_MINUTE, TIME_PER_HOUR, TIME_PER_DAY, TIME_PER_WEEK,\n    TIME_PER_MONTH, TIME_PER_YEAR, TIME_PER_UNIT } from '../date-utils/constants';\nimport { dateComparer, toDate, addTicks, addDuration, dateDiff, absoluteDateDiff,\n    dateIndex, dateEquals, toTime, parseDate, parseDates, firstDay } from '../date-utils';\n\nimport { DateLabelFormats } from './constants';\n\nvar AUTO = \"auto\";\nvar BASE_UNITS = [\n    MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS\n];\nvar FIT = \"fit\";\n\n\nfunction categoryRange(categories) {\n    var range = categories._range;\n    if (!range) {\n        range = categories._range = sparseArrayLimits(categories);\n        range.min = toDate(range.min);\n        range.max = toDate(range.max);\n    }\n\n    return range;\n}\n\nvar EmptyDateRange = function EmptyDateRange(options) {\n    this.options = options;\n};\n\nEmptyDateRange.prototype.displayIndices = function displayIndices () {\n    return {\n        min: 0,\n        max: 1\n    };\n};\n\nEmptyDateRange.prototype.displayRange = function displayRange () {\n    return {};\n};\n\nEmptyDateRange.prototype.total = function total () {\n    return {};\n};\n\nEmptyDateRange.prototype.valueRange = function valueRange () {\n    return {};\n};\n\nEmptyDateRange.prototype.valueIndex = function valueIndex () {\n    return -1;\n};\n\nEmptyDateRange.prototype.values = function values () {\n    return [];\n};\n\nEmptyDateRange.prototype.totalIndex = function totalIndex () {\n    return -1;\n};\n\nEmptyDateRange.prototype.valuesCount = function valuesCount () {\n    return 0;\n};\n\nEmptyDateRange.prototype.totalCount = function totalCount () {\n    return 0;\n};\n\nEmptyDateRange.prototype.dateAt = function dateAt () {\n    return null;\n};\n\nvar DateRange = function DateRange(start, end, options) {\n    this.options = options;\n    options.baseUnitStep = options.baseUnitStep || 1;\n\n    var roundToBaseUnit = options.roundToBaseUnit;\n    var justified = options.justified;\n\n    this.start = addDuration(start, 0, options.baseUnit, options.weekStartDay);\n    var lowerEnd = this.roundToTotalStep(end);\n    var expandEnd = !justified && dateEquals(end, lowerEnd) && !options.justifyEnd;\n\n    this.end = this.roundToTotalStep(end, !justified, expandEnd ? 1 : 0);\n\n    var min = options.min || start;\n    this.valueStart = this.roundToTotalStep(min);\n    this.displayStart = roundToBaseUnit ? this.valueStart : min;\n\n    var max = options.max;\n    if (!max) {\n        this.valueEnd = lowerEnd;\n        this.displayEnd = roundToBaseUnit || expandEnd ? this.end : end;\n    } else {\n        var next = !justified && dateEquals(max, this.roundToTotalStep(max)) ? -1 : 0;\n        this.valueEnd = this.roundToTotalStep(max, false, next);\n        this.displayEnd = roundToBaseUnit ? this.roundToTotalStep(max, !justified) : options.max;\n    }\n\n    if (this.valueEnd < this.valueStart) {\n        this.valueEnd = this.valueStart;\n    }\n    if (this.displayEnd <= this.displayStart) {\n        this.displayEnd = this.roundToTotalStep(this.displayStart, false, 1);\n    }\n};\n\nDateRange.prototype.displayRange = function displayRange () {\n    return {\n        min: this.displayStart,\n        max: this.displayEnd\n    };\n};\n\nDateRange.prototype.displayIndices = function displayIndices () {\n    if (!this._indices) {\n        var options = this.options;\n\n        var baseUnit = options.baseUnit;\n            var baseUnitStep = options.baseUnitStep;\n\n        var minIdx = dateIndex(this.displayStart, this.valueStart, baseUnit, baseUnitStep);\n        var maxIdx = dateIndex(this.displayEnd, this.valueStart, baseUnit, baseUnitStep);\n\n        this._indices = { min: minIdx, max: maxIdx };\n    }\n\n    return this._indices;\n};\n\nDateRange.prototype.total = function total () {\n    return {\n        min: this.start,\n        max: this.end\n    };\n};\n\nDateRange.prototype.totalCount = function totalCount () {\n    var last = this.totalIndex(this.end);\n\n    return last + (this.options.justified ? 1 : 0);\n};\n\nDateRange.prototype.valueRange = function valueRange () {\n    return {\n        min: this.valueStart,\n        max: this.valueEnd\n    };\n};\n\nDateRange.prototype.valueIndex = function valueIndex (value) {\n    var options = this.options;\n    return Math.floor(dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep));\n};\n\nDateRange.prototype.totalIndex = function totalIndex (value) {\n    var options = this.options;\n    return Math.floor(dateIndex(value, this.start, options.baseUnit, options.baseUnitStep));\n};\n\nDateRange.prototype.dateIndex = function dateIndex$1 (value) {\n    var options = this.options;\n    return dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep);\n};\n\nDateRange.prototype.valuesCount = function valuesCount () {\n    var maxIdx = this.valueIndex(this.valueEnd);\n\n    return maxIdx + 1;\n};\n\nDateRange.prototype.values = function values () {\n    var values = this._values;\n    if (!values) {\n        var options = this.options;\n        var range = this.valueRange();\n        this._values = values = [];\n\n        for (var date = range.min; date <= range.max;) {\n            values.push(date);\n            date = addDuration(date, options.baseUnitStep, options.baseUnit, options.weekStartDay);\n        }\n    }\n\n    return values;\n};\n\nDateRange.prototype.dateAt = function dateAt (index, total) {\n    var options = this.options;\n\n    return addDuration(total ? this.start : this.valueStart, options.baseUnitStep * index, options.baseUnit, options.weekStartDay);\n};\n\nDateRange.prototype.roundToTotalStep = function roundToTotalStep (value, upper, next) {\n    var ref = this.options;\n        var baseUnit = ref.baseUnit;\n        var baseUnitStep = ref.baseUnitStep;\n        var weekStartDay = ref.weekStartDay;\n    var start = this.start;\n\n    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n    var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n\n    if (next) {\n        roundedStep += next;\n    }\n\n    return addDuration(start, roundedStep * baseUnitStep, baseUnit, weekStartDay);\n};\n\nfunction autoBaseUnit(options, startUnit, startStep) {\n    var categoryLimits = categoryRange(options.categories);\n    var span = (options.max || categoryLimits.max) - (options.min || categoryLimits.min);\n    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n    var maxDateGroups = options.maxDateGroups;\n    var autoUnit = options.baseUnit === FIT;\n    var autoUnitIx = startUnit ? BASE_UNITS.indexOf(startUnit) : 0;\n    var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n    var units = span / TIME_PER_UNIT[baseUnit];\n    var totalUnits = units;\n    var unitSteps, step, nextStep;\n\n    while (!step || units >= maxDateGroups) {\n        unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n\n        do {\n            nextStep = unitSteps.shift();\n        } while (nextStep && startUnit === baseUnit && nextStep < startStep);\n\n        if (nextStep) {\n            step = nextStep;\n            units = totalUnits / step;\n        } else if (baseUnit === last(BASE_UNITS)) {\n            step = Math.ceil(totalUnits / maxDateGroups);\n            break;\n        } else if (autoUnit) {\n            baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n            totalUnits = span / TIME_PER_UNIT[baseUnit];\n            unitSteps = null;\n        } else {\n            if (units > maxDateGroups) {\n                step = Math.ceil(totalUnits / maxDateGroups);\n            }\n            break;\n        }\n    }\n\n    options.baseUnitStep = step;\n    options.baseUnit = baseUnit;\n}\n\nfunction defaultBaseUnit(options) {\n    var categories = options.categories;\n    var count = defined(categories) ? categories.length : 0;\n    var minDiff = MAX_VALUE;\n    var lastCategory, unit;\n\n    for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n        var category = categories[categoryIx];\n\n        if (category && lastCategory) {\n            var diff = absoluteDateDiff(category, lastCategory);\n            if (diff > 0) {\n                minDiff = Math.min(minDiff, diff);\n\n                if (minDiff >= TIME_PER_YEAR) {\n                    unit = YEARS;\n                } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                    unit = MONTHS;\n                } else if (minDiff >= TIME_PER_WEEK) {\n                    unit = WEEKS;\n                } else if (minDiff >= TIME_PER_DAY) {\n                    unit = DAYS;\n                } else if (minDiff >= TIME_PER_HOUR) {\n                    unit = HOURS;\n                } else if (minDiff >= TIME_PER_MINUTE) {\n                    unit = MINUTES;\n                } else {\n                    unit = SECONDS;\n                }\n            }\n        }\n\n        lastCategory = category;\n    }\n\n    options.baseUnit = unit || DAYS;\n}\n\nfunction initUnit(options) {\n    var baseUnit = (options.baseUnit || \"\").toLowerCase();\n    var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n\n    if (useDefault) {\n        defaultBaseUnit(options);\n    }\n\n    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n        autoBaseUnit(options);\n    }\n\n    return options;\n}\n\nvar DateCategoryAxis = (function (CategoryAxis) {\n    function DateCategoryAxis () {\n        CategoryAxis.apply(this, arguments);\n    }\n\n    if ( CategoryAxis ) DateCategoryAxis.__proto__ = CategoryAxis;\n    DateCategoryAxis.prototype = Object.create( CategoryAxis && CategoryAxis.prototype );\n    DateCategoryAxis.prototype.constructor = DateCategoryAxis;\n\n    DateCategoryAxis.prototype.clone = function clone () {\n        var copy = new DateCategoryAxis(Object.assign({}, this.options), this.chartService);\n        copy.createLabels();\n\n        return copy;\n    };\n\n    DateCategoryAxis.prototype.categoriesHash = function categoriesHash () {\n        var start = this.dataRange.total().min;\n        return this.options.baseUnit + this.options.baseUnitStep + start;\n    };\n\n    DateCategoryAxis.prototype.initUserOptions = function initUserOptions (options) {\n        return options;\n    };\n\n    DateCategoryAxis.prototype.initFields = function initFields () {\n        CategoryAxis.prototype.initFields.call(this);\n\n        var chartService = this.chartService;\n        var intlService = chartService.intl;\n        var options = this.options;\n\n        var categories = options.categories || [];\n        if (!categories._parsed) {\n            categories = parseDates(intlService, categories);\n            categories._parsed = true;\n        }\n\n        options = deepExtend({\n            roundToBaseUnit: true\n        }, options, {\n            categories: categories,\n            min: parseDate(intlService, options.min),\n            max: parseDate(intlService, options.max),\n            weekStartDay: firstDay(options, intlService)\n        });\n\n        if (chartService.panning && chartService.isPannable(options.vertical ? Y : X)) {\n            options.roundToBaseUnit = false;\n        }\n\n        options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n        options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n\n        this.options = options;\n        options.srcCategories = categories;\n\n        if (categories.length > 0) {\n            var range = categoryRange(categories);\n            var maxDivisions = options.maxDivisions;\n\n            this.dataRange = new DateRange(range.min, range.max, initUnit(options));\n\n            if (maxDivisions) {\n                var dataRange = this.dataRange.displayRange();\n\n                var divisionOptions = Object.assign({}, options, {\n                    justified: true,\n                    roundToBaseUnit: false,\n                    baseUnit: 'fit',\n                    min: dataRange.min,\n                    max: dataRange.max,\n                    maxDateGroups: maxDivisions\n                });\n\n                var dataRangeOptions = this.dataRange.options;\n\n                autoBaseUnit(divisionOptions, dataRangeOptions.baseUnit, dataRangeOptions.baseUnitStep);\n\n                this.divisionRange = new DateRange(range.min, range.max, divisionOptions);\n            } else {\n                this.divisionRange = this.dataRange;\n            }\n\n        } else {\n            options.baseUnit = options.baseUnit || DAYS;\n            this.dataRange = this.divisionRange = new EmptyDateRange(options);\n        }\n\n        this.rangeLabels = [];\n    };\n\n    DateCategoryAxis.prototype.tickIndices = function tickIndices (stepSize) {\n        var ref = this;\n        var dataRange = ref.dataRange;\n        var divisionRange = ref.divisionRange;\n        var valuesCount = divisionRange.valuesCount();\n\n        if (!this.options.maxDivisions || !valuesCount) {\n            return CategoryAxis.prototype.tickIndices.call(this, stepSize);\n        }\n\n        var indices = [];\n        var values = divisionRange.values();\n        var offset = 0;\n\n        if (!this.options.justified) {\n            values = values.concat(divisionRange.dateAt(valuesCount));\n            offset = 0.5;//align ticks to the center of not justified categories\n        }\n\n        for (var idx = 0; idx < values.length; idx++) {\n            indices.push(dataRange.dateIndex(values[idx]) + offset);\n            if (stepSize !== 1 && idx >= 1) {\n                var last = indices.length - 1;\n                indices.splice(idx, 0, indices[last - 1] + (indices[last] - indices[last - 1]) * stepSize);\n            }\n        }\n\n        return indices;\n    };\n\n    DateCategoryAxis.prototype.shouldRenderNote = function shouldRenderNote (value) {\n        var range = this.range();\n        var categories = this.options.categories || [];\n\n        return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n    };\n\n    DateCategoryAxis.prototype.parseNoteValue = function parseNoteValue (value) {\n        return parseDate(this.chartService.intl, value);\n    };\n\n    DateCategoryAxis.prototype.noteSlot = function noteSlot (value) {\n        return this.getSlot(value);\n    };\n\n    DateCategoryAxis.prototype.translateRange = function translateRange (delta) {\n        var options = this.options;\n        var baseUnit = options.baseUnit;\n        var weekStartDay = options.weekStartDay;\n        var vertical = options.vertical;\n        var lineBox = this.lineBox();\n        var size = vertical ? lineBox.height() : lineBox.width();\n        var range = this.range();\n        var scale = size / (range.max - range.min);\n        var offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if (range.min && range.max) {\n            var from = addTicks(options.min || range.min, offset);\n            var to = addTicks(options.max || range.max, offset);\n\n            range = {\n                min: addDuration(from, 0, baseUnit, weekStartDay),\n                max: addDuration(to, 0, baseUnit, weekStartDay)\n            };\n        }\n\n        return range;\n    };\n\n    DateCategoryAxis.prototype.scaleRange = function scaleRange (delta) {\n        var rounds = Math.abs(delta);\n        var result = this.range();\n        var from = result.min;\n        var to = result.max;\n\n        if (from && to) {\n            while (rounds--) {\n                var range = dateDiff(from, to);\n                var step = Math.round(range * 0.1);\n                if (delta < 0) {\n                    from = addTicks(from, step);\n                    to = addTicks(to, -step);\n                } else {\n                    from = addTicks(from, -step);\n                    to = addTicks(to, step);\n                }\n            }\n\n            result = { min: from, max: to };\n        }\n\n        return result;\n    };\n\n    DateCategoryAxis.prototype.labelsRange = function labelsRange () {\n        return {\n            min: this.options.labels.skip,\n            max: this.divisionRange.valuesCount()\n        };\n    };\n\n    DateCategoryAxis.prototype.pan = function pan (delta) {\n        if (this.isEmpty()) {\n            return null;\n        }\n\n        var options = this.options;\n        var lineBox = this.lineBox();\n        var size = options.vertical ? lineBox.height() : lineBox.width();\n        var ref = this.dataRange.displayRange();\n        var min = ref.min;\n        var max = ref.max;\n        var totalLimits = this.dataRange.total();\n        var scale = size / (max - min);\n        var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n        var from = addTicks(min, offset);\n        var to = addTicks(max, offset);\n\n        var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n\n        if (panRange) {\n            panRange.min = toDate(panRange.min);\n            panRange.max = toDate(panRange.max);\n            panRange.baseUnit = options.baseUnit;\n            panRange.baseUnitStep = options.baseUnitStep || 1;\n            panRange.userSetBaseUnit = options.userSetBaseUnit;\n            panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n\n            return panRange;\n        }\n    };\n\n    DateCategoryAxis.prototype.pointsRange = function pointsRange (start, end) {\n        if (this.isEmpty()) {\n            return null;\n        }\n\n        var pointsRange = CategoryAxis.prototype.pointsRange.call(this, start, end);\n        var datesRange = this.dataRange.displayRange();\n        var indicesRange = this.dataRange.displayIndices();\n        var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n        var options = this.options;\n\n        var min = addTicks(datesRange.min, pointsRange.min * scale);\n        var max = addTicks(datesRange.min, pointsRange.max * scale);\n\n        return {\n            min: min,\n            max: max,\n            baseUnit: options.userSetBaseUnit || options.baseUnit,\n            baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n        };\n    };\n\n    DateCategoryAxis.prototype.zoomRange = function zoomRange (delta) {\n        if (this.isEmpty()) {\n            return null;\n        }\n\n        var options = this.options;\n        var fit = options.userSetBaseUnit === FIT;\n        var totalLimits = this.dataRange.total();\n        var ref = this.dataRange.displayRange();\n        var rangeMin = ref.min;\n        var rangeMax = ref.max;\n        var ref$1 = this.dataRange.options;\n        var weekStartDay = ref$1.weekStartDay;\n        var baseUnit = ref$1.baseUnit;\n        var baseUnitStep = ref$1.baseUnitStep;\n        var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n        var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n\n        if (fit) {\n            var autoBaseUnitSteps = options.autoBaseUnitSteps;\n            var maxDateGroups = options.maxDateGroups;\n\n            var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n            var rangeDiff = dateDiff(rangeMax, rangeMin);\n            var diff = dateDiff(max, min);\n            var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n            var autoBaseUnitStep, ticks;\n\n            if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                min = addTicks(rangeMin, ticks);\n                max = addTicks(rangeMax, -ticks);\n\n            } else if (diff > maxDiff && baseUnit !== YEARS) {\n                var stepIndex = 0;\n\n                do {\n                    baseUnitIndex++;\n                    baseUnit = BASE_UNITS[baseUnitIndex];\n                    stepIndex = 0;\n                    ticks = 2 * TIME_PER_UNIT[baseUnit];\n                    do {\n                        autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                        stepIndex++;\n                    } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n\n                ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                if (ticks > 0) {\n                    min = addTicks(rangeMin, -ticks);\n                    max = addTicks(rangeMax, ticks);\n                    min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                    max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                }\n            }\n        }\n\n        if (min < totalLimits.min) {\n            min = totalLimits.min;\n        }\n        if (max > totalLimits.max) {\n            max = totalLimits.max;\n        }\n\n        if (min && max && dateDiff(max, min) > 0) {\n            return {\n                min: min,\n                max: max,\n                baseUnit: options.userSetBaseUnit || options.baseUnit,\n                baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n            };\n        }\n    };\n\n    DateCategoryAxis.prototype.range = function range () {\n        return this.dataRange.displayRange();\n    };\n\n    DateCategoryAxis.prototype.createLabels = function createLabels () {\n        CategoryAxis.prototype.createLabels.call(this);\n        this.createRangeLabels();\n    };\n\n    DateCategoryAxis.prototype.clearLabels = function clearLabels () {\n        CategoryAxis.prototype.clearLabels.call(this);\n        this.rangeLabels = [];\n    };\n\n    DateCategoryAxis.prototype.arrangeLabels = function arrangeLabels () {\n        this.arrangeRangeLabels();\n        CategoryAxis.prototype.arrangeLabels.call(this);\n    };\n\n    DateCategoryAxis.prototype.arrangeRangeLabels = function arrangeRangeLabels () {\n        var ref = this;\n        var options = ref.options;\n        var rangeLabels = ref.rangeLabels;\n        if (rangeLabels.length === 0) {\n            return;\n        }\n\n        var lineBox = this.lineBox();\n        var vertical = options.vertical;\n        var mirror = options.rangeLabels.mirror || options.labels.mirror;\n\n        var firstLabel = rangeLabels[0];\n        if (firstLabel) {\n            var position = vertical ? lineBox.y1 - (firstLabel.box.height() / 2) : lineBox.x1;\n            this.positionLabel(firstLabel, mirror, position);\n        }\n\n        var lastLabel = rangeLabels[1];\n        if (lastLabel) {\n            var position$1 = vertical ? lineBox.y2 - (lastLabel.box.height() / 2) : lineBox.x2;\n            this.positionLabel(lastLabel, mirror, position$1);\n        }\n    };\n\n    DateCategoryAxis.prototype.autoRotateLabels = function autoRotateLabels () {\n        CategoryAxis.prototype.autoRotateLabels.call(this);\n        this.autoRotateRangeLabels();\n    };\n\n    DateCategoryAxis.prototype.hideOutOfRangeLabels = function hideOutOfRangeLabels () {\n        CategoryAxis.prototype.hideOutOfRangeLabels.call(this);\n        this.hideOverlappingLabels();\n    };\n\n    DateCategoryAxis.prototype.hideOverlappingLabels = function hideOverlappingLabels () {\n        var ref = this;\n        var rangeLabels = ref.rangeLabels;\n        var labels = ref.labels;\n        if (rangeLabels.length === 0) {\n            return;\n        }\n\n        function clip(rangeLabel, label) {\n            if (!label.options.visible || label.box.overlaps(rangeLabel.box)) {\n                label.options.visible = false;\n                return true;\n            }\n\n            return false;\n        }\n\n        var firstRangeLabel = rangeLabels[0];\n        if (firstRangeLabel && firstRangeLabel.options.visible) {\n            for (var i = 0; i < labels.length; i++) {\n                var overlaps = clip(firstRangeLabel, labels[i]);\n                if (!overlaps) {\n                    break;\n                }\n            }\n        }\n\n        var lastRangeLabel = rangeLabels[1];\n        if (lastRangeLabel && lastRangeLabel.options.visible) {\n            for (var i$1 = labels.length - 1; i$1 > 0; --i$1) {\n                var overlaps$1 = clip(lastRangeLabel, labels[i$1]);\n                if (!overlaps$1) {\n                    break;\n                }\n            }\n        }\n    };\n\n    DateCategoryAxis.prototype.contentBox = function contentBox () {\n        var box = CategoryAxis.prototype.contentBox.call(this);\n        var rangeLabels = this.rangeLabels;\n\n        for (var i = 0; i < rangeLabels.length; i++) {\n            var label = rangeLabels[i];\n            if (label.options.visible) {\n                box.wrap(label.box);\n            }\n        }\n\n        return box;\n    };\n\n    DateCategoryAxis.prototype.createAxisLabel = function createAxisLabel (index, labelOptions, labelContext) {\n        if ( labelContext === void 0 ) labelContext = {};\n\n        var options = this.options;\n        var dataItem = options.dataItems && !options.maxDivisions ? options.dataItems[index] : null;\n        var date = this.divisionRange.dateAt(index);\n        var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n\n        labelOptions.format = labelOptions.format || unitFormat;\n        labelContext.dataItem = dataItem;\n\n        var text = this.axisLabelText(date, labelOptions, labelContext);\n        if (text) {\n            return new AxisLabel(date, text, index, dataItem, labelOptions);\n        }\n    };\n\n    DateCategoryAxis.prototype.createRangeLabels = function createRangeLabels () {\n        var this$1 = this;\n\n        var ref = this.divisionRange;\n        var displayStart = ref.displayStart;\n        var displayEnd = ref.displayEnd;\n        var options = this.options;\n        var labelOptions = Object.assign({}, options.labels, options.rangeLabels, {\n            align: CENTER,\n            zIndex: options.zIndex\n        });\n\n        if (labelOptions.visible !== true) {\n            return;\n        }\n\n        this.normalizeLabelRotation(labelOptions);\n        labelOptions.alignRotation = CENTER;\n\n        if (labelOptions.rotation === \"auto\") {\n            labelOptions.rotation = 0;\n            options.autoRotateRangeLabels = true;\n        }\n\n        var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n        labelOptions.format = labelOptions.format || unitFormat;\n\n        var createLabel = function (index, date, text) {\n            if (text) {\n                var label = new AxisLabel(date, text, index, null, labelOptions);\n                this$1.append(label);\n                this$1.rangeLabels.push(label);\n            }\n        };\n\n        var startText = this.axisLabelText(displayStart, labelOptions, { index: 0, count: 2 });\n        createLabel(0, displayStart, startText);\n\n        var endText = this.axisLabelText(displayEnd, labelOptions, { index: 1, count: 2 });\n        createLabel(1, displayEnd, endText);\n    };\n\n    DateCategoryAxis.prototype.autoRotateRangeLabels = function autoRotateRangeLabels () {\n        var this$1 = this;\n\n        var labels = this.rangeLabels;\n        if (!this.options.autoRotateRangeLabels || this.options.vertical || labels.length !== 2) {\n            return;\n        }\n\n        var rotateLabel = function (label, tickPositions, index) {\n            var width = Math.abs(tickPositions[index + 1] - tickPositions[index]) * 2;\n            var angle = this$1.autoRotateLabelAngle(label.box, width);\n            if (angle !== 0) {\n                label.options.rotation = angle;\n                label.reflow(new Box());\n            }\n        };\n\n        var tickPositions = this.getMajorTickPositions();\n        rotateLabel(labels[0], tickPositions, 0);\n        rotateLabel(labels[1], tickPositions, tickPositions.length - 2);\n    };\n\n    DateCategoryAxis.prototype.categoryIndex = function categoryIndex (value) {\n        return this.dataRange.valueIndex(value);\n    };\n\n    DateCategoryAxis.prototype.slot = function slot (from, to, limit) {\n        var dateRange = this.dataRange;\n        var start = from;\n        var end = to;\n\n        if (start instanceof Date) {\n            start = dateRange.dateIndex(start);\n        }\n\n        if (end instanceof Date) {\n            end = dateRange.dateIndex(end);\n        }\n\n        var slot = this.getSlot(start, end, limit);\n        if (slot) {\n            return slot.toRect();\n        }\n    };\n\n    DateCategoryAxis.prototype.getSlot = function getSlot (a, b, limit) {\n        var start = a;\n        var end = b;\n\n        if (typeof start === OBJECT) {\n            start = this.categoryIndex(start);\n        }\n\n        if (typeof end === OBJECT) {\n            end = this.categoryIndex(end);\n        }\n\n        return CategoryAxis.prototype.getSlot.call(this, start, end, limit);\n    };\n\n    DateCategoryAxis.prototype.valueRange = function valueRange () {\n        var options = this.options;\n        var range = categoryRange(options.srcCategories);\n\n        return {\n            min: toDate(range.min),\n            max: toDate(range.max)\n        };\n    };\n\n    DateCategoryAxis.prototype.categoryAt = function categoryAt (index, total) {\n        return this.dataRange.dateAt(index, total);\n    };\n\n    DateCategoryAxis.prototype.categoriesCount = function categoriesCount () {\n        return this.dataRange.valuesCount();\n    };\n\n    DateCategoryAxis.prototype.rangeIndices = function rangeIndices () {\n        return this.dataRange.displayIndices();\n    };\n\n    DateCategoryAxis.prototype.labelsBetweenTicks = function labelsBetweenTicks () {\n        return !this.divisionRange.options.justified;\n    };\n\n    DateCategoryAxis.prototype.prepareUserOptions = function prepareUserOptions () {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        this.options.categories = this.dataRange.values();\n    };\n\n    DateCategoryAxis.prototype.getCategory = function getCategory (point) {\n        var index = this.pointCategoryIndex(point);\n\n        if (index === null) {\n            return null;\n        }\n\n        return this.dataRange.dateAt(index);\n    };\n\n    DateCategoryAxis.prototype.totalIndex = function totalIndex (value) {\n        return this.dataRange.totalIndex(value);\n    };\n\n    DateCategoryAxis.prototype.currentRangeIndices = function currentRangeIndices () {\n        var range = this.dataRange.valueRange();\n        return {\n            min: this.dataRange.totalIndex(range.min),\n            max: this.dataRange.totalIndex(range.max)\n        };\n    };\n\n    DateCategoryAxis.prototype.totalRange = function totalRange () {\n        return this.dataRange.total();\n    };\n\n    DateCategoryAxis.prototype.totalCount = function totalCount () {\n        return this.dataRange.totalCount();\n    };\n\n    DateCategoryAxis.prototype.isEmpty = function isEmpty () {\n        return !this.options.srcCategories.length;\n    };\n\n    DateCategoryAxis.prototype.roundedRange = function roundedRange () {\n        if (this.options.roundToBaseUnit !== false || this.isEmpty()) {\n            return this.range();\n        }\n\n        var options = this.options;\n        var datesRange = categoryRange(options.srcCategories);\n\n        var dateRange = new DateRange(datesRange.min, datesRange.max, Object.assign({}, options, {\n            justified: false,\n            roundToBaseUnit: true,\n            justifyEnd: options.justified\n        }));\n\n        return dateRange.displayRange();\n    };\n\n    return DateCategoryAxis;\n}(CategoryAxis));\n\nsetDefaultOptions(DateCategoryAxis, {\n    type: DATE,\n    labels: {\n        dateFormats: DateLabelFormats\n    },\n    rangeLabels: {\n        visible: false\n    },\n    autoBaseUnitSteps: {\n        milliseconds: [ 1, 10, 100 ],\n        seconds: [ 1, 2, 5, 15, 30 ],\n        minutes: [ 1, 2, 5, 15, 30 ],\n        hours: [ 1, 2, 3 ],\n        days: [ 1, 2, 3 ],\n        weeks: [ 1, 2 ],\n        months: [ 1, 2, 3, 6 ],\n        years: [ 1, 2, 3, 5, 10, 25, 50 ]\n    },\n    maxDateGroups: 10\n});\n\nexport default DateCategoryAxis;\n"]},"metadata":{},"sourceType":"module"}