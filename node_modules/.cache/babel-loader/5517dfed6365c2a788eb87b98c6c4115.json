{"ast":null,"code":"var _jsxFileName = \"/Users/rishikoul/Desktop/interview/frontend/src/TableView.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { employeeData } from \"./data\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePageHeader = ({\n  searchQuery,\n  setSearchQuery\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/\",\n    method: \"get\",\n    class: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Interview Problem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"header-search\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Search blog posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchQuery,\n      onInput: e => setSearchQuery(e.target.value),\n      type: \"text\",\n      id: \"header-search\",\n      placeholder: \"Search blog posts\",\n      name: \"s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 11\n  }, this);\n};\n\n_c = HomePageHeader;\n\nconst myTable = ({\n  company,\n  ticker\n}) => {\n  if (!company) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this);\n};\n\nfunction check(fruits, location) {\n  if (fruits.length === 0) {\n    return -1;\n  }\n\n  for (var i = 0; i < fruits.length; i++) {\n    if (fruits[i].location === location) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n;\n\nfunction filterPosts(posts, query) {\n  var filtered = [];\n\n  if (!query) {\n    return posts;\n  }\n\n  for (var i = 0; i < posts.length; i++) {\n    if (posts[i].location.toLowerCase().includes(query)) {\n      filtered.push(posts[i]);\n    }\n  }\n\n  return filtered;\n}\n\n;\n\nfunction getEmployeeData(data) {\n  var employee_dict = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var index = check(employee_dict, data[i].location);\n\n    if (index === -1) {\n      employee_dict.push({\n        location: data[i].location,\n        currValue: parseFloat(data[i].currSalary.replace(\"$\", \"\")),\n        noOf: 1\n      });\n    } else {\n      employee_dict[index].currValue += parseFloat(data[i].currSalary.replace(\"$\", \"\"));\n      employee_dict[index].noOf += 1;\n    }\n  }\n\n  return employee_dict;\n}\n\nexport const TableView = () => {\n  _s();\n\n  var employee_dict = getEmployeeData(employeeData);\n  const {\n    search\n  } = window.location;\n  const query = new URLSearchParams(search).get('s');\n  const [searchQuery, setSearchQuery] = useState(query || '');\n  const filtered = filterPosts(employee_dict, searchQuery);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HomePageHeader, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mean Salary($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), filtered.map((data, key) => {\n          var mean = data.currValue / data.noOf;\n          return /*#__PURE__*/_jsxDEV(\"myTable\", {\n            company: data.location,\n            ticker: mean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TableView, \"pXXt52WI/stnZiWWbi60P0ok4qk=\");\n\n_c2 = TableView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HomePageHeader\");\n$RefreshReg$(_c2, \"TableView\");","map":{"version":3,"sources":["/Users/rishikoul/Desktop/interview/frontend/src/TableView.js"],"names":["employeeData","useState","HomePageHeader","searchQuery","setSearchQuery","e","target","value","myTable","company","ticker","check","fruits","location","length","i","filterPosts","posts","query","filtered","toLowerCase","includes","push","getEmployeeData","data","employee_dict","index","currValue","parseFloat","currSalary","replace","noOf","TableView","search","window","URLSearchParams","get","map","key","mean"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,YAAT,QAA6B,QAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAqC;AACtD,sBACI;AAAM,IAAA,MAAM,EAAC,GAAb;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAA8B,IAAA,KAAK,EAAC,QAApC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AACI,MAAA,KAAK,EAAED,WADX;AAEI,MAAA,OAAO,EAAEE,CAAC,IAAID,cAAc,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,EAAE,EAAC,eAJP;AAKI,MAAA,WAAW,EAAC,mBALhB;AAMI,MAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,YALJ,eAaI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBL,CAnBD;;KAAML,c;;AAuBN,MAAMM,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAClC,MAAI,CAACD,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,sBACI;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD,CAdL;;AAgBI,SAASC,KAAT,CAAeC,MAAf,EAAuBC,QAAvB,EAAgC;AAE9B,MAAGD,MAAM,CAACE,MAAP,KAAkB,CAArB,EACA;AACE,WAAO,CAAC,CAAR;AACD;;AACC,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,MAAM,CAACE,MAA1B,EAAkCC,CAAC,EAAnC,EACA;AACI,QAAGH,MAAM,CAACG,CAAD,CAAN,CAAUF,QAAV,KAAuBA,QAA1B,EACA;AACI,aAAOE,CAAP;AACH;AACJ;;AACD,SAAO,CAAC,CAAR;AACD;;AAAA;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAkC;AAEhC,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAI,CAACD,KAAL,EAAY;AACR,WAAOD,KAAP;AACH;;AAED,OAAI,IAAIF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGE,KAAK,CAACH,MAAzB,EAAiCC,CAAC,EAAlC,EACA;AACE,QAAGE,KAAK,CAACF,CAAD,CAAL,CAASF,QAAT,CAAkBO,WAAlB,GAAgCC,QAAhC,CAAyCH,KAAzC,CAAH,EACA;AACEC,MAAAA,QAAQ,CAACG,IAAT,CAAcL,KAAK,CAACF,CAAD,CAAnB;AACD;AACF;;AAED,SAAOI,QAAP;AACD;;AAAA;;AAED,SAASI,eAAT,CAAyBC,IAAzB,EAA8B;AAE5B,MAAIC,aAAa,GAAG,EAApB;;AACA,OAAI,IAAIV,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGS,IAAI,CAACV,MAAxB,EAAgCC,CAAC,EAAjC,EACA;AACE,QAAIW,KAAK,GAAGf,KAAK,CAACc,aAAD,EAAgBD,IAAI,CAACT,CAAD,CAAJ,CAAQF,QAAxB,CAAjB;;AACA,QAAGa,KAAK,KAAK,CAAC,CAAd,EACA;AACED,MAAAA,aAAa,CAACH,IAAd,CAAmB;AACbT,QAAAA,QAAQ,EAAIW,IAAI,CAACT,CAAD,CAAJ,CAAQF,QADP;AAEbc,QAAAA,SAAS,EAAEC,UAAU,CAACJ,IAAI,CAACT,CAAD,CAAJ,CAAQc,UAAR,CAAmBC,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,CAAD,CAFR;AAGbC,QAAAA,IAAI,EAAE;AAHO,OAAnB;AAKD,KAPD,MAQI;AACFN,MAAAA,aAAa,CAACC,KAAD,CAAb,CAAqBC,SAArB,IAAkCC,UAAU,CAACJ,IAAI,CAACT,CAAD,CAAJ,CAAQc,UAAR,CAAmBC,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,CAAD,CAA5C;AACAL,MAAAA,aAAa,CAACC,KAAD,CAAb,CAAqBK,IAArB,IAA6B,CAA7B;AACD;AACF;;AACD,SAAON,aAAP;AACD;;AAEH,OAAO,MAAMO,SAAS,GAAG,MAAM;AAAA;;AAC3B,MAAIP,aAAa,GAAGF,eAAe,CAACvB,YAAD,CAAnC;AACA,QAAM;AAAEiC,IAAAA;AAAF,MAAaC,MAAM,CAACrB,QAA1B;AACA,QAAMK,KAAK,GAAG,IAAIiB,eAAJ,CAAoBF,MAApB,EAA4BG,GAA5B,CAAgC,GAAhC,CAAd;AACA,QAAM,CAACjC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAACiB,KAAK,IAAI,EAAV,CAA9C;AACC,QAAMC,QAAQ,GAAGH,WAAW,CAACS,aAAD,EAAgBtB,WAAhB,CAA5B;AAEC,sBACF;AAAA,4BACM,QAAC,cAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,YADN,eAKM;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACA;AAAA,gCACM;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,EAOEe,QAAQ,CAACkB,GAAT,CAAa,CAACb,IAAD,EAAOc,GAAP,KAAe;AACxB,cAAIC,IAAI,GAAGf,IAAI,CAACG,SAAL,GAAeH,IAAI,CAACO,IAA/B;AACF,8BAEI;AACE,YAAA,OAAO,EAAEP,IAAI,CAACX,QADhB;AAEE,YAAA,MAAM,EAAE0B;AAFV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAOD,SATD,CAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YALN;AAAA,kBADE;AA4BD,CAnCE;;GAAMP,S;;MAAAA,S","sourcesContent":["import \"./App.css\";\nimport { employeeData } from \"./data\";\nimport { useState } from 'react';\n\nconst HomePageHeader = ({ searchQuery, setSearchQuery }) => {\n      return (\n          <form action=\"/\" method=\"get\" class=\"search\">\n            <h2>Interview Problem</h2>\n              <label htmlFor=\"header-search\">\n                  <span className=\"visually-hidden\">Search blog posts</span>\n              </label>\n              <input\n                  value={searchQuery}\n                  onInput={e => setSearchQuery(e.target.value)}\n                  type=\"text\"\n                  id=\"header-search\"\n                  placeholder=\"Search blog posts\"\n                  name=\"s\" \n              />\n              <button type=\"submit\">Search</button>\n          </form>\n      \n      );\n};\n\n\n\nconst myTable = ({ company, ticker}) => {\n      if (!company) return <div />;\n      return (\n          <tbody>\n            <tr>\n              <td>\n                <h5>{company}</h5>\n              </td>\n              <td>\n                <h5>{ticker}</h5>\n              </td>\n            </tr>\n          </tbody>\n      );\n    };\n\n    function check(fruits, location){\n        \n      if(fruits.length === 0)\n      {\n        return -1;\n      }\n        for(var i = 0; i < fruits.length; i++)\n        {\n            if(fruits[i].location === location)\n            {\n                return i;\n            }\n        }\n        return -1;\n      };\n\n      function filterPosts(posts, query){\n\n        var filtered = []\n        if (!query) {\n            return posts;\n        }\n      \n        for(var i = 0; i < posts.length; i++)\n        {\n          if(posts[i].location.toLowerCase().includes(query))\n          {\n            filtered.push(posts[i]);\n          }\n        }\n\n        return filtered;\n      };\n\n      function getEmployeeData(data){\n\n        var employee_dict = []; \n        for(var i = 0; i < data.length; i++)\n        {\n          var index = check(employee_dict, data[i].location);\n          if(index === -1)\n          {\n            employee_dict.push({\n                  location:   data[i].location,\n                  currValue: parseFloat(data[i].currSalary.replace(\"$\", \"\")),\n                  noOf: 1\n              });\n          }\n          else{\n            employee_dict[index].currValue += parseFloat(data[i].currSalary.replace(\"$\", \"\"));\n            employee_dict[index].noOf += 1;\n          }\n        }\n        return employee_dict;\n      }\n\n    export const TableView = () => {\n        var employee_dict = getEmployeeData(employeeData);\n        const { search } = window.location;\n        const query = new URLSearchParams(search).get('s');\n        const [searchQuery, setSearchQuery] = useState(query || '');\n         const filtered = filterPosts(employee_dict, searchQuery);\n\n          return (\n        <>\n              <HomePageHeader \n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n              <div className=\"stock-container\">\n              <table>\n                    <thead>\n                    <th>First Name</th>\n                    <th>Mean Salary($)</th>\n                  </thead>\n                \n                {\n                filtered.map((data, key) => {\n                    var mean = data.currValue/data.noOf;\n                  return (\n\n                      <myTable\n                        company={data.location}\n                        ticker={mean}\n                      />\n                  );\n                })}\n                </table>\n              </div>\n            </>\n          );\n        };\n\n"]},"metadata":{},"sourceType":"module"}