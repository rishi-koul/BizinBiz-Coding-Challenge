{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, defined, round, getSpacing } from '../../common';\nimport { BLACK, COORD_PRECISION } from '../../common/constants';\nimport { autoMajorUnit, Box, NumericAxis } from '../../core';\nimport { buildLabelElement, getRange } from '../utils';\nimport { DEGREE, DEFAULT_LINE_WIDTH, INSIDE, OUTSIDE } from '../constants';\nvar GEO_ARC_ADJUST_ANGLE = 180;\nvar Arc = drawing.Arc;\nvar Path = drawing.Path;\nvar Group = drawing.Group;\n\nfunction drawTicks(arc, tickAngles, unit, tickOptions) {\n  var ticks = new Group();\n  var center = arc.center;\n  var radius = arc.getRadiusX();\n\n  if (tickOptions.visible) {\n    for (var i = 0; i < tickAngles.length; i++) {\n      var tickStart = arc.pointAt(tickAngles[i]);\n      var tickEnd = new geo.Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n      ticks.append(new Path({\n        stroke: {\n          color: tickOptions.color,\n          width: tickOptions.width\n        }\n      }).moveTo(tickStart).lineTo(tickEnd));\n    }\n  }\n\n  return ticks;\n}\n\nfunction rangeSegment(from, to, color, opacity) {\n  return {\n    from: from,\n    to: to,\n    color: color,\n    opacity: opacity\n  };\n}\n\nvar RadialScale = function (NumericAxis) {\n  function RadialScale(options, service) {\n    NumericAxis.call(this, 0, 1, options, service);\n  }\n\n  if (NumericAxis) RadialScale.__proto__ = NumericAxis;\n  RadialScale.prototype = Object.create(NumericAxis && NumericAxis.prototype);\n  RadialScale.prototype.constructor = RadialScale;\n\n  RadialScale.prototype.initUserOptions = function initUserOptions(options) {\n    var scaleOptions = deepExtend({}, this.options, options);\n    scaleOptions.majorUnit = scaleOptions.majorUnit || autoMajorUnit(scaleOptions.min, scaleOptions.max);\n    scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n    return scaleOptions;\n  };\n\n  RadialScale.prototype.initFields = function initFields() {};\n\n  RadialScale.prototype.render = function render(center, radius) {\n    var arc = this.renderArc(center, radius);\n    this.bbox = arc.bbox();\n    this.labelElements = this.renderLabels();\n    this.ticks = this.renderTicks();\n    this.ranges = this.renderRanges();\n  };\n\n  RadialScale.prototype.reflow = function reflow(bbox) {\n    var center = bbox.center();\n    var radius = Math.min(bbox.height(), bbox.width()) / 2;\n\n    if (defined(this.bbox)) {\n      this.bbox = this.arc.bbox();\n      this.radius(this.arc.getRadiusX());\n      this.repositionRanges();\n      this.renderLabels();\n    } else {\n      return this.render(center, radius);\n    }\n  };\n\n  RadialScale.prototype.slotAngle = function slotAngle(value) {\n    var ref = this.options;\n    var min = ref.min;\n    var max = ref.max;\n    var reverse = ref.reverse;\n    var startAngle = ref.startAngle;\n    var endAngle = ref.endAngle;\n    var angle = endAngle - startAngle;\n    var result;\n\n    if (reverse) {\n      result = endAngle - (value - min) / (max - min) * angle;\n    } else {\n      result = (value - min) / (max - min) * angle + startAngle;\n    }\n\n    return result + GEO_ARC_ADJUST_ANGLE;\n  };\n\n  RadialScale.prototype.hasRanges = function hasRanges() {\n    var ranges = this.options.ranges;\n    return ranges && ranges.length;\n  };\n\n  RadialScale.prototype.ticksSize = function ticksSize() {\n    var ref = this.options;\n    var majorTicks = ref.majorTicks;\n    var minorTicks = ref.minorTicks;\n    var size = 0;\n\n    if (majorTicks.visible) {\n      size = majorTicks.size;\n    }\n\n    if (minorTicks.visible) {\n      size = Math.max(minorTicks.size, size);\n    }\n\n    return size;\n  };\n\n  RadialScale.prototype.labelsCount = function labelsCount() {\n    var count = NumericAxis.prototype.labelsCount.call(this);\n    var options = this.options;\n    var angle = options.endAngle - options.startAngle;\n\n    if (angle >= 360 && options.max % options.majorUnit === 0) {\n      count -= 1;\n    }\n\n    return count;\n  };\n\n  RadialScale.prototype.renderLabels = function renderLabels() {\n    var this$1 = this;\n    var options = this.options;\n    var arc = this.arc.clone();\n    var radius = arc.getRadiusX();\n    var tickAngles = this.tickAngles(arc, options.majorUnit);\n    var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n    var labelsGroup = new Group();\n    var rangeDistance = radius * 0.05;\n\n    if (defined(options.rangeDistance)) {\n      rangeDistance = options.rangeDistance;\n    } else {\n      options.rangeDistance = rangeDistance;\n    }\n\n    var labelsOptions = options.labels;\n    var isInside = labelsOptions.position === INSIDE;\n    var hasLabelElements = defined(this.labelElements);\n\n    if (isInside) {\n      radius -= this.ticksSize();\n\n      if (this.hasRanges() && !hasLabelElements) {\n        radius -= rangeSize + rangeDistance;\n      }\n\n      arc.setRadiusX(radius).setRadiusY(radius);\n    }\n\n    var labels = this.labels;\n    var count = labels.length;\n    var padding = getSpacing(labelsOptions.padding);\n    var paddingWidth = (padding.left + padding.right) / 2;\n    var paddingHeight = (padding.top + padding.bottom) / 2;\n\n    for (var i = 0; i < count; i++) {\n      var label = labels[i];\n      var halfWidth = label.box.width() / 2;\n      var halfHeight = label.box.height() / 2;\n      var angle = tickAngles[i];\n      var labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n      var lp = arc.pointAt(angle);\n      var cx = lp.x + Math.cos(labelAngle) * (halfWidth + paddingWidth) * (isInside ? 1 : -1);\n      var cy = lp.y + Math.sin(labelAngle) * (halfHeight + paddingHeight) * (isInside ? 1 : -1);\n      label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n      var labelPos = new geo.Point(label.box.x1, label.box.y1);\n      var labelElement = void 0;\n\n      if (!hasLabelElements) {\n        labelElement = buildLabelElement(label, options.labels);\n        labelsGroup.append(labelElement);\n      } else {\n        labelElement = this$1.labelElements.children[i];\n        var prevLabelPos = labelElement.bbox().origin;\n        var labelTransform = labelElement.transform() || geo.transform();\n        labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n        labelElement.transform(labelTransform);\n      }\n\n      this$1.bbox = geo.Rect.union(this$1.bbox, labelElement.bbox());\n    }\n\n    return labelsGroup;\n  };\n\n  RadialScale.prototype.repositionRanges = function repositionRanges() {\n    var ranges = this.ranges.children;\n\n    if (ranges.length > 0) {\n      var ref = this.options;\n      var rangeDistance = ref.rangeDistance;\n      var rangeSize = ref.rangeSize;\n      var rangeRadius = this.getRangeRadius();\n\n      if (this.options.labels.position === INSIDE) {\n        rangeRadius += rangeSize + rangeDistance;\n      }\n\n      var newRadius = rangeRadius + rangeSize / 2;\n\n      for (var i = 0; i < ranges.length; i++) {\n        ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n      }\n\n      this.bbox = geo.Rect.union(this.bbox, this.ranges.bbox());\n    }\n  };\n\n  RadialScale.prototype.renderRanges = function renderRanges() {\n    var this$1 = this;\n    var segments = this.rangeSegments();\n    var segmentsCount = segments.length;\n    var result = new Group();\n\n    if (segmentsCount) {\n      var ref = this.options;\n      var rangeSize = ref.rangeSize;\n      var reverse = ref.reverse;\n      var rangeDistance = ref.rangeDistance;\n      var rangeRadius = this.getRangeRadius(); // move the ticks with a range distance and a range size\n\n      this.radius(this.radius() - rangeSize - rangeDistance);\n\n      for (var i = 0; i < segmentsCount; i++) {\n        var segment = segments[i];\n        var from = this$1.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n        var to = this$1.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n\n        if (to - from !== 0) {\n          result.append(this$1.createRange(from, to, rangeRadius, segment));\n        }\n      }\n    }\n\n    return result;\n  };\n\n  RadialScale.prototype.createRange = function createRange(startAngle, endAngle, rangeRadius, options) {\n    var rangeSize = this.options.rangeSize;\n    var rangeGeom = new geo.Arc(this.arc.center, {\n      radiusX: rangeRadius + rangeSize / 2,\n      radiusY: rangeRadius + rangeSize / 2,\n      startAngle: startAngle,\n      endAngle: endAngle\n    });\n    return new Arc(rangeGeom, {\n      stroke: {\n        width: rangeSize,\n        color: options.color,\n        opacity: options.opacity,\n        lineCap: options.lineCap\n      }\n    });\n  };\n\n  RadialScale.prototype.rangeSegments = function rangeSegments() {\n    var options = this.options;\n    var ranges = options.ranges || [];\n    var count = ranges.length;\n    var segments = [];\n\n    if (count) {\n      var min = options.min;\n      var max = options.max;\n      var defaultColor = options.rangePlaceholderColor;\n      segments.push(rangeSegment(min, max, defaultColor));\n\n      for (var i = 0; i < count; i++) {\n        var range = getRange(ranges[i], min, max);\n        var segmentsCount = segments.length;\n\n        for (var j = 0; j < segmentsCount; j++) {\n          var segment = segments[j];\n\n          if (segment.from <= range.from && range.from <= segment.to) {\n            segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n\n            if (segment.from <= range.to && range.to <= segment.to) {\n              segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n            }\n\n            segment.to = range.from;\n            break;\n          }\n        }\n      }\n    }\n\n    return segments;\n  };\n\n  RadialScale.prototype.getRangeRadius = function getRangeRadius() {\n    var ref = this;\n    var arc = ref.arc;\n    var options = ref.options;\n    var rangeSize = options.rangeSize;\n    var rangeDistance = options.rangeDistance;\n    var majorTickSize = options.majorTicks.size;\n    var radius;\n\n    if (options.labels.position === OUTSIDE) {\n      radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n    } else {\n      radius = arc.getRadiusX() - rangeSize;\n    }\n\n    return radius;\n  };\n\n  RadialScale.prototype.renderArc = function renderArc(center, radius) {\n    var options = this.options;\n    var arc = this.arc = new geo.Arc(center, {\n      radiusX: radius,\n      radiusY: radius,\n      startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n      endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n    });\n    return arc;\n  };\n\n  RadialScale.prototype.renderTicks = function renderTicks() {\n    var ref = this;\n    var arc = ref.arc;\n    var options = ref.options;\n    var tickArc = arc.clone();\n    this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n    this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n    var allTicks = new Group();\n    allTicks.append(this.majorTicks);\n    var majorTickSize = options.majorTicks.size;\n    var minorTickSize = options.minorTicks.size;\n    this._tickDifference = majorTickSize - minorTickSize;\n\n    if (options.labels.position === OUTSIDE) {\n      var radius = tickArc.getRadiusX();\n      tickArc.setRadiusX(radius - majorTickSize + minorTickSize).setRadiusY(radius - majorTickSize + minorTickSize);\n    }\n\n    this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n    this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n    allTicks.append(this.minorTicks);\n    return allTicks;\n  };\n\n  RadialScale.prototype.normalizeTickAngles = function normalizeTickAngles(angles) {\n    var options = this.options;\n    var skip = options.majorUnit / options.minorUnit;\n\n    for (var i = angles.length - 1; i >= 0; i--) {\n      if (i % skip === 0) {\n        angles.splice(i, 1);\n      }\n    }\n\n    return angles;\n  };\n\n  RadialScale.prototype.tickAngles = function tickAngles(ring, stepValue) {\n    var options = this.options;\n    var reverse = options.reverse;\n    var range = options.max - options.min;\n    var angle = ring.endAngle - ring.startAngle;\n    var tickCount = range / stepValue;\n    var pos = ring.startAngle;\n    var step = angle / tickCount;\n\n    if (reverse) {\n      pos += angle;\n      step = -step;\n    }\n\n    if (angle >= 360 && options.max % stepValue === 0) {\n      tickCount -= 1;\n    }\n\n    var positions = [];\n\n    for (var i = 0; i < tickCount; i++) {\n      positions.push(round(pos, COORD_PRECISION));\n      pos += step;\n    }\n\n    if (round(pos) <= ring.endAngle) {\n      positions.push(pos);\n    }\n\n    return positions;\n  };\n\n  RadialScale.prototype.radius = function radius(value) {\n    if (value) {\n      this.arc.setRadiusX(value).setRadiusY(value);\n      this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n      this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n    } else {\n      return this.arc.getRadiusX();\n    }\n  };\n\n  RadialScale.prototype.repositionTicks = function repositionTicks(ticks, tickAngles, minor) {\n    var diff = minor ? this._tickDifference || 0 : 0;\n    var tickArc = this.arc;\n    var radius = tickArc.getRadiusX();\n\n    if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n      tickArc = this.arc.clone();\n      tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n    }\n\n    for (var i = 0; i < ticks.length; i++) {\n      var newPoint = tickArc.pointAt(tickAngles[i]);\n      var segments = ticks[i].segments;\n      var xDiff = newPoint.x - segments[0].anchor().x;\n      var yDiff = newPoint.y - segments[0].anchor().y;\n      ticks[i].transform(new geo.transform().translate(xDiff, yDiff));\n    }\n  };\n\n  return RadialScale;\n}(NumericAxis);\n\nsetDefaultOptions(RadialScale, {\n  min: 0,\n  max: 100,\n  majorTicks: {\n    size: 15,\n    align: INSIDE,\n    color: BLACK,\n    width: DEFAULT_LINE_WIDTH,\n    visible: true\n  },\n  minorTicks: {\n    size: 10,\n    align: INSIDE,\n    color: BLACK,\n    width: DEFAULT_LINE_WIDTH,\n    visible: true\n  },\n  startAngle: -30,\n  endAngle: 210,\n  labels: {\n    position: INSIDE,\n    padding: 2\n  }\n});\nexport default RadialScale;","map":{"version":3,"sources":["/Users/rishikoul/Desktop/interview/frontend/node_modules/@progress/kendo-charts/dist/es/gauges/radial/radial-scale.js"],"names":["geometry","geo","drawing","setDefaultOptions","deepExtend","defined","round","getSpacing","BLACK","COORD_PRECISION","autoMajorUnit","Box","NumericAxis","buildLabelElement","getRange","DEGREE","DEFAULT_LINE_WIDTH","INSIDE","OUTSIDE","GEO_ARC_ADJUST_ANGLE","Arc","Path","Group","drawTicks","arc","tickAngles","unit","tickOptions","ticks","center","radius","getRadiusX","visible","i","length","tickStart","pointAt","tickEnd","Point","x","size","y","rotate","append","stroke","color","width","moveTo","lineTo","rangeSegment","from","to","opacity","RadialScale","options","service","call","__proto__","prototype","Object","create","constructor","initUserOptions","scaleOptions","majorUnit","min","max","minorUnit","initFields","render","renderArc","bbox","labelElements","renderLabels","renderTicks","ranges","renderRanges","reflow","Math","height","repositionRanges","slotAngle","value","ref","reverse","startAngle","endAngle","angle","result","hasRanges","ticksSize","majorTicks","minorTicks","labelsCount","count","this$1","clone","rangeSize","labelsGroup","rangeDistance","labelsOptions","labels","isInside","position","hasLabelElements","setRadiusX","setRadiusY","padding","paddingWidth","left","right","paddingHeight","top","bottom","label","halfWidth","box","halfHeight","labelAngle","lp","cx","cos","cy","sin","labelPos","x1","y1","labelElement","children","prevLabelPos","origin","labelTransform","transform","translate","Rect","union","rangeRadius","getRangeRadius","newRadius","_geometry","segments","rangeSegments","segmentsCount","segment","createRange","rangeGeom","radiusX","radiusY","lineCap","defaultColor","rangePlaceholderColor","push","range","j","majorTickSize","tickArc","majorTickAngles","allTicks","minorTickSize","_tickDifference","minorTickAngles","normalizeTickAngles","angles","skip","splice","ring","stepValue","tickCount","pos","step","positions","repositionTicks","minor","diff","newPoint","xDiff","anchor","yDiff","align"],"mappings":"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","sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, defined, round, getSpacing } from '../../common';\nimport { BLACK, COORD_PRECISION } from '../../common/constants';\nimport { autoMajorUnit, Box, NumericAxis } from '../../core';\nimport { buildLabelElement, getRange } from '../utils';\n\nimport { DEGREE, DEFAULT_LINE_WIDTH, INSIDE, OUTSIDE } from '../constants';\n\nvar GEO_ARC_ADJUST_ANGLE = 180;\n\nvar Arc = drawing.Arc;\nvar Path = drawing.Path;\nvar Group = drawing.Group;\n\nfunction drawTicks(arc, tickAngles, unit, tickOptions) {\n    var ticks = new Group();\n    var center = arc.center;\n    var radius = arc.getRadiusX();\n\n    if (tickOptions.visible) {\n        for (var i = 0; i < tickAngles.length; i++) {\n            var tickStart = arc.pointAt(tickAngles[i]);\n            var tickEnd = new geo.Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n\n            ticks.append(new Path({\n                stroke: {\n                    color: tickOptions.color,\n                    width: tickOptions.width\n                }\n            }).moveTo(tickStart).lineTo(tickEnd));\n        }\n    }\n\n    return ticks;\n}\n\nfunction rangeSegment(from, to, color, opacity) {\n    return { from: from, to: to, color: color, opacity: opacity };\n}\n\nvar RadialScale = (function (NumericAxis) {\n    function RadialScale(options, service) {\n        NumericAxis.call(this, 0, 1, options, service);\n    }\n\n    if ( NumericAxis ) RadialScale.__proto__ = NumericAxis;\n    RadialScale.prototype = Object.create( NumericAxis && NumericAxis.prototype );\n    RadialScale.prototype.constructor = RadialScale;\n\n    RadialScale.prototype.initUserOptions = function initUserOptions (options) {\n        var scaleOptions = deepExtend({}, this.options, options);\n        scaleOptions.majorUnit = scaleOptions.majorUnit || autoMajorUnit(scaleOptions.min, scaleOptions.max);\n        scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n\n        return scaleOptions;\n    };\n\n    RadialScale.prototype.initFields = function initFields () {\n    };\n\n    RadialScale.prototype.render = function render (center, radius) {\n        var arc = this.renderArc(center, radius);\n\n        this.bbox = arc.bbox();\n        this.labelElements = this.renderLabels();\n        this.ticks = this.renderTicks();\n        this.ranges = this.renderRanges();\n    };\n\n    RadialScale.prototype.reflow = function reflow (bbox) {\n        var center = bbox.center();\n        var radius = Math.min(bbox.height(), bbox.width()) / 2;\n\n        if (defined(this.bbox)) {\n            this.bbox = this.arc.bbox();\n            this.radius(this.arc.getRadiusX());\n            this.repositionRanges();\n            this.renderLabels();\n        } else {\n            return this.render(center, radius);\n        }\n    };\n\n    RadialScale.prototype.slotAngle = function slotAngle (value) {\n        var ref = this.options;\n        var min = ref.min;\n        var max = ref.max;\n        var reverse = ref.reverse;\n        var startAngle = ref.startAngle;\n        var endAngle = ref.endAngle;\n        var angle = endAngle - startAngle;\n        var result;\n\n        if (reverse) {\n            result = endAngle - (value - min) / (max - min) * angle;\n        } else {\n            result = ((value - min) / (max - min) * angle) + startAngle;\n        }\n\n        return result + GEO_ARC_ADJUST_ANGLE;\n    };\n\n    RadialScale.prototype.hasRanges = function hasRanges () {\n        var ranges = this.options.ranges;\n\n        return ranges && ranges.length;\n    };\n\n    RadialScale.prototype.ticksSize = function ticksSize () {\n        var ref = this.options;\n        var majorTicks = ref.majorTicks;\n        var minorTicks = ref.minorTicks;\n        var size = 0;\n        if (majorTicks.visible) {\n            size = majorTicks.size;\n        }\n\n        if (minorTicks.visible) {\n            size = Math.max(minorTicks.size, size);\n        }\n\n        return size;\n    };\n\n    RadialScale.prototype.labelsCount = function labelsCount () {\n        var count = NumericAxis.prototype.labelsCount.call(this);\n        var options = this.options;\n        var angle = options.endAngle - options.startAngle;\n\n        if (angle >= 360 && (options.max % options.majorUnit === 0)) {\n            count -= 1;\n        }\n\n        return count;\n    };\n\n    RadialScale.prototype.renderLabels = function renderLabels () {\n        var this$1 = this;\n\n        var options = this.options;\n        var arc = this.arc.clone();\n        var radius = arc.getRadiusX();\n        var tickAngles = this.tickAngles(arc, options.majorUnit);\n        var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n        var labelsGroup = new Group();\n\n        var rangeDistance = radius * 0.05;\n        if (defined(options.rangeDistance)) {\n            rangeDistance = options.rangeDistance;\n        } else {\n            options.rangeDistance = rangeDistance;\n        }\n\n        var labelsOptions = options.labels;\n        var isInside = labelsOptions.position === INSIDE;\n        var hasLabelElements = defined(this.labelElements);\n\n        if (isInside) {\n            radius -= this.ticksSize();\n\n            if (this.hasRanges() && !hasLabelElements) {\n                radius -= rangeSize + rangeDistance;\n            }\n            arc.setRadiusX(radius).setRadiusY(radius);\n        }\n\n        var labels = this.labels;\n        var count = labels.length;\n        var padding = getSpacing(labelsOptions.padding);\n        var paddingWidth = (padding.left + padding.right) / 2;\n        var paddingHeight = (padding.top + padding.bottom) / 2;\n\n        for (var i = 0; i < count; i++) {\n            var label = labels[i];\n            var halfWidth = label.box.width() / 2;\n            var halfHeight = label.box.height() / 2;\n            var angle = tickAngles[i];\n            var labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n\n            var lp = arc.pointAt(angle);\n            var cx = lp.x + (Math.cos(labelAngle) * (halfWidth + paddingWidth) * (isInside ? 1 : -1));\n            var cy = lp.y + (Math.sin(labelAngle) * (halfHeight + paddingHeight) * (isInside ? 1 : -1));\n\n            label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n            var labelPos = new geo.Point(label.box.x1, label.box.y1);\n\n            var labelElement = (void 0);\n            if (!hasLabelElements) {\n                labelElement = buildLabelElement(label, options.labels);\n                labelsGroup.append(labelElement);\n            } else {\n                labelElement = this$1.labelElements.children[i];\n                var prevLabelPos = labelElement.bbox().origin;\n\n                var labelTransform = labelElement.transform() || geo.transform();\n                labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                labelElement.transform(labelTransform);\n            }\n\n            this$1.bbox = geo.Rect.union(this$1.bbox, labelElement.bbox());\n        }\n\n        return labelsGroup;\n    };\n\n    RadialScale.prototype.repositionRanges = function repositionRanges () {\n        var ranges = this.ranges.children;\n\n        if (ranges.length > 0) {\n            var ref = this.options;\n            var rangeDistance = ref.rangeDistance;\n            var rangeSize = ref.rangeSize;\n            var rangeRadius = this.getRangeRadius();\n\n            if (this.options.labels.position === INSIDE) {\n                rangeRadius += rangeSize + rangeDistance;\n            }\n\n            var newRadius = rangeRadius + (rangeSize / 2);\n\n            for (var i = 0; i < ranges.length; i++) {\n                ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n            }\n\n            this.bbox = geo.Rect.union(this.bbox, this.ranges.bbox());\n        }\n    };\n\n    RadialScale.prototype.renderRanges = function renderRanges () {\n        var this$1 = this;\n\n        var segments = this.rangeSegments();\n        var segmentsCount = segments.length;\n        var result = new Group();\n\n        if (segmentsCount) {\n            var ref = this.options;\n            var rangeSize = ref.rangeSize;\n            var reverse = ref.reverse;\n            var rangeDistance = ref.rangeDistance;\n            var rangeRadius = this.getRangeRadius();\n\n            // move the ticks with a range distance and a range size\n            this.radius(this.radius() - rangeSize - rangeDistance);\n\n            for (var i = 0; i < segmentsCount; i++) {\n                var segment = segments[i];\n                var from = this$1.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n                var to = this$1.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n\n                if (to - from !== 0) {\n                    result.append(this$1.createRange(from, to, rangeRadius, segment));\n                }\n            }\n        }\n\n        return result;\n    };\n\n    RadialScale.prototype.createRange = function createRange (startAngle, endAngle, rangeRadius, options) {\n        var rangeSize = this.options.rangeSize;\n        var rangeGeom = new geo.Arc(this.arc.center, {\n            radiusX: rangeRadius + (rangeSize / 2),\n            radiusY: rangeRadius + (rangeSize / 2),\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n\n        return new Arc(rangeGeom, {\n            stroke: {\n                width: rangeSize,\n                color: options.color,\n                opacity: options.opacity,\n                lineCap: options.lineCap\n            }\n        });\n    };\n\n    RadialScale.prototype.rangeSegments = function rangeSegments () {\n        var options = this.options;\n        var ranges = options.ranges || [];\n        var count = ranges.length;\n        var segments = [];\n\n        if (count) {\n            var min = options.min;\n            var max = options.max;\n            var defaultColor = options.rangePlaceholderColor;\n            segments.push(rangeSegment(min, max, defaultColor));\n\n            for (var i = 0; i < count; i++) {\n                var range = getRange(ranges[i], min, max);\n                var segmentsCount = segments.length;\n\n                for (var j = 0; j < segmentsCount; j++) {\n                    var segment = segments[j];\n\n                    if (segment.from <= range.from && range.from <= segment.to) {\n                        segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n\n                        if (segment.from <= range.to && range.to <= segment.to) {\n                            segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                        }\n\n                        segment.to = range.from;\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        return segments;\n    };\n\n    RadialScale.prototype.getRangeRadius = function getRangeRadius () {\n        var ref = this;\n        var arc = ref.arc;\n        var options = ref.options;\n        var rangeSize = options.rangeSize;\n        var rangeDistance = options.rangeDistance;\n        var majorTickSize = options.majorTicks.size;\n        var radius;\n\n        if (options.labels.position === OUTSIDE) {\n            radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n        } else {\n            radius = arc.getRadiusX() - rangeSize;\n        }\n\n        return radius;\n    };\n\n    RadialScale.prototype.renderArc = function renderArc (center, radius) {\n        var options = this.options;\n\n        var arc = this.arc = new geo.Arc(center, {\n            radiusX: radius,\n            radiusY: radius,\n            startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n            endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n        });\n\n        return arc;\n    };\n\n    RadialScale.prototype.renderTicks = function renderTicks () {\n        var ref = this;\n        var arc = ref.arc;\n        var options = ref.options;\n        var tickArc = arc.clone();\n\n        this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n        this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n\n        var allTicks = new Group();\n        allTicks.append(this.majorTicks);\n\n        var majorTickSize = options.majorTicks.size;\n        var minorTickSize = options.minorTicks.size;\n\n        this._tickDifference = majorTickSize - minorTickSize;\n\n        if (options.labels.position === OUTSIDE) {\n            var radius = tickArc.getRadiusX();\n            tickArc.setRadiusX(radius - majorTickSize + minorTickSize)\n                   .setRadiusY(radius - majorTickSize + minorTickSize);\n        }\n\n        this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n        this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n        allTicks.append(this.minorTicks);\n\n        return allTicks;\n    };\n\n    RadialScale.prototype.normalizeTickAngles = function normalizeTickAngles (angles) {\n        var options = this.options;\n        var skip = options.majorUnit / options.minorUnit;\n\n        for (var i = angles.length - 1; i >= 0; i--) {\n            if (i % skip === 0) {\n                angles.splice(i, 1);\n            }\n        }\n\n        return angles;\n    };\n\n    RadialScale.prototype.tickAngles = function tickAngles (ring, stepValue) {\n        var options = this.options;\n        var reverse = options.reverse;\n        var range = options.max - options.min;\n        var angle = ring.endAngle - ring.startAngle;\n        var tickCount = range / stepValue;\n        var pos = ring.startAngle;\n        var step = angle / tickCount;\n\n        if (reverse) {\n            pos += angle;\n            step = -step;\n        }\n\n        if (angle >= 360 && (options.max % stepValue === 0)) {\n            tickCount -= 1;\n        }\n\n        var positions = [];\n        for (var i = 0; i < tickCount; i++) {\n            positions.push(round(pos, COORD_PRECISION));\n            pos += step;\n        }\n\n        if (round(pos) <= ring.endAngle) {\n            positions.push(pos);\n        }\n\n        return positions;\n    };\n\n    RadialScale.prototype.radius = function radius (value) {\n        if (value) {\n            this.arc.setRadiusX(value).setRadiusY(value);\n            this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n            this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n        } else {\n            return this.arc.getRadiusX();\n        }\n    };\n\n    RadialScale.prototype.repositionTicks = function repositionTicks (ticks, tickAngles, minor) {\n        var diff = minor ? (this._tickDifference || 0) : 0;\n        var tickArc = this.arc;\n        var radius = tickArc.getRadiusX();\n\n        if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n            tickArc = this.arc.clone();\n            tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n        }\n\n        for (var i = 0; i < ticks.length; i++) {\n            var newPoint = tickArc.pointAt(tickAngles[i]);\n            var segments = ticks[i].segments;\n            var xDiff = newPoint.x - segments[0].anchor().x;\n            var yDiff = newPoint.y - segments[0].anchor().y;\n\n            ticks[i].transform(new geo.transform().translate(xDiff, yDiff));\n        }\n    };\n\n    return RadialScale;\n}(NumericAxis));\n\nsetDefaultOptions(RadialScale, {\n    min: 0,\n    max: 100,\n\n    majorTicks: {\n        size: 15,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    minorTicks: {\n        size: 10,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    startAngle: -30,\n    endAngle: 210,\n\n    labels: {\n        position: INSIDE,\n        padding: 2\n    }\n});\n\nexport default RadialScale;\n"]},"metadata":{},"sourceType":"module"}